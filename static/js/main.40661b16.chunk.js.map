{"version":3,"sources":["utils/helper.js","common/years.js","common/months.js","common/days.js","common/category.js","common/types.js","forms/AddTransactionForm.js","components/AddTransactionPanel.js","forms/UpdateTransactionForm.js","components/DeleteConfirmDialog.js","components/TransactionDisplay.js","components/Wallet.js","common/currencies.js","forms/AddWalletForm.js","components/WalletMenu.js","pages/WalletPage.js","components/SignUp.js","components/SignIn.js","forms/AddBudgetForm.js","components/ForecastChart.js","pages/ReportPage.js","App.js","registerServiceWorker.js","index.js"],"names":["getTransactions","next","token","localStorage","getItem","url","concat","fetch","headers","Accept","then","response","json","isSignedIn","res","catch","e","console","error","getCurrentDate","today","Date","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","convertNumber","number","numeral","format","convertToString","value","toString","years","text","months","code","days","category","Outcome","Income","types","AddTransactionForm","state","transaction","walletId","_this","props","wallet","walletName","name","type","cost","currentDate","errors","handleInputChange","event","data","setState","Object","objectSpread","defineProperty","validate","validator","isNumeric","handleAddTransactionClick","keys","length","onAddTransactionClick","isCategoryDisabled","this","categoryOptions","errorMessages","map","key","react_default","a","createElement","es","header","content","Group","widths","Field","placeholder","onChange","selection","fluid","options","walletNames","disabled","onClick","attached","basic","color","onCancelClick","Component","AddTransactionPanel","displayAddButton","handleAddButtonClick","handleCancelButtonClick","textAlign","Row","icon","forms_AddTransactionForm","UpdateTransactionForm","modalOpen","id","String","handleOpenClick","handleCloseClick","handleUpdateTransactionClick","onUpdateTransactionClick","trigger","open","onClose","handleClose","size","Content","Actions","inverted","DeleteDialogConfirm","transaction_id","handleConfirmClick","onTrashClick","bulleted","Item","TransactionDisplay","Cell","style","currency","DeleteConfirmDialog","forms_UpdateTransactionForm","Wallet","handleTrashClick","_this2","transactions","sort","b","components_TransactionDisplay","_id","striped","Header","HeaderCell","Body","currencies","AddWalletForm","initBalance","handleAddWalletClick","onAddWalletClick","WalletMenu","className","nickname","walletBar","forms_AddWalletForm","circular","onSignOutClick","active","WalletPage","redirectSignIn","wallets","setTransactions","method","body","JSON","stringify","Content-Type","createWallet","Error","forceUpdate","createTransaction","updateTransaction","deleteTransaction","handleSignOutClick","removeItem","_this3","Redirect","to","NavLink","components_WalletMenu","Route","path","render","_ref","match","find","w","params","totalConsumption","reduce","currentMonthTransactions","filter","Number","thisMonthConsumtion","currencyCode","c","monthString","m","raised","components_AddTransactionPanel","columns","Column","Link","components_Wallet","exact","_ref2","SignUp","isSignedUp","user","username","password","target","handleSignUpClick","serverErrors","server","message","setItem","SignIn","needSignUp","handleSignInClick","AddBudgetForm","budget","amount","handleAddBudgetClick","onAddBudgetClick","ForecastChart","displayChart","plotOptions","line","marker","enabled","title","series","computeSumUpTransactions","Array","from","v","k","predictions","computePrediction","dashStyle","marginTop","highcharts_react_min_default","highcharts","Highcharts","update","propTransactions","i","estDailySpent","toConsumableArray","push","ReportPage","displayCurrency","budgets","createBudget","budgetId","deleteBudget","setDisplayCurrency","oldYear","newYear","newMonth","oldMonth","totalSpent","totalIncome","categoricalSpent","categoricalSpentDailySpent","categoricalIncome","forEach","t","balance","displayOutcome","sumOfCategory","paddingBottom","paddingTop","padding","forms_AddBudgetForm","components_ForecastChart","marginBottom","progress","Math","floor","percent","label","margin","App","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","HashRouter","src_App","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gUAEO,SAASA,EAAgBC,GAC9B,IAAMC,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,uEAAAC,OAA0EJ,GACnF,OAAOK,MAAMF,EAAK,CAChBG,QAAS,CACPC,OAAU,sBAGXC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAKT,GAoBH,SAASY,IACd,IAAMX,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,yEAAAC,OAA4EJ,GACrF,OAAOK,MAAMF,EAAK,CAChBG,QAAS,CACPC,OAAU,sBAEXC,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBG,MAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,KAoGvB,SAASG,IACd,IAAMC,EAAQ,IAAIC,KAClB,MAAO,CACLC,IAAKF,EAAMG,aACXC,MAAOJ,EAAMK,cAAgB,EAC7BC,KAAMN,EAAMO,kBAIT,SAASC,EAAcC,GAC5B,OAAOC,IAAQD,GAAQE,OAAO,EAAE,GAG3B,SAASC,EAAgBH,GAC9B,OAAOC,IAAQD,GAAQI,QAAQC,iDClIlBC,EAvBD,CACZ,CACEC,KAAM,OACNH,MAAO,MAET,CACEG,KAAM,OACNH,MAAO,MAET,CACEG,KAAM,OACNH,MAAO,MAET,CACEG,KAAM,OACNH,MAAO,MAET,CACEG,KAAM,OACNH,MAAO,OC4CII,EA/DA,CACb,CACED,KAAM,IACNH,MAAO,EACPK,KAAM,WAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,YAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,SAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,SAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,OAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,QAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,QAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,UAER,CACEF,KAAM,IACNH,MAAO,EACPK,KAAM,aAER,CACEF,KAAM,KACNH,MAAO,GACPK,KAAM,WAER,CACEF,KAAM,KACNH,MAAO,GACPK,KAAM,YAER,CACEF,KAAM,KACNH,MAAO,GACPK,KAAM,aCkEKC,EA7HF,CACX,CACEH,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,IACNH,MAAO,GAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IACP,CACAG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IACP,CACAG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,IAET,CACEG,KAAM,KACNH,MAAO,KCiBIO,EA1IE,CACfC,QAAW,CACT,CACEL,KAAM,mBACNH,MAAO,oBAET,CACEG,KAAM,cACNH,MAAO,eAET,CACEG,KAAM,WACNH,MAAO,YAET,CACEG,KAAM,UACNH,MAAO,WAET,CACEG,KAAM,gBACNH,MAAO,iBAET,CACEG,KAAM,iBACNH,MAAO,kBAET,CACEG,KAAM,aACNH,MAAO,cAET,CACEG,KAAM,WACNH,MAAO,YAET,CACEG,KAAM,iBACNH,MAAO,kBAET,CACEG,KAAM,SACNH,MAAO,UAET,CACEG,KAAM,SACNH,MAAO,UAET,CACEG,KAAM,aACNH,MAAO,cAET,CACEG,KAAM,gBACNH,MAAO,iBAET,CACEG,KAAM,kBACNH,MAAO,mBAET,CACEG,KAAM,WACNH,MAAO,YAET,CACEG,KAAM,aACNH,MAAO,cAET,CACEG,KAAM,gBACNH,MAAO,iBAET,CACEG,KAAM,aACNH,MAAO,cAET,CACEG,KAAM,cACNH,MAAO,eAET,CACEG,KAAM,iBACNH,MAAO,kBAET,CACEG,KAAM,aACNH,MAAO,cAET,CACEG,KAAM,YACNH,MAAO,aAET,CACEG,KAAM,aACNH,MAAO,cAET,CACEG,KAAM,YACNH,MAAO,aAET,CACEG,KAAM,cACNH,MAAO,eAET,CACEG,KAAM,WACNH,MAAO,YAET,CACEG,KAAM,SACNH,MAAO,WAGXS,OAAU,CACR,CACEN,KAAM,SACNH,MAAO,UAET,CACEG,KAAM,YACNH,MAAO,aAET,CACEG,KAAM,kBACNH,MAAO,mBAET,CACEG,KAAM,oBACNH,MAAO,qBAET,CACEG,KAAM,gBACNH,MAAO,iBAET,CACEG,KAAM,SACNH,MAAO,YC3HEU,EAXD,CACZ,CACEP,KAAM,SACNH,MAAO,UAET,CACEG,KAAM,UACNH,MAAO,YCiNIW,6MA5MbC,MAAQ,CACNC,YAAa,CACXC,SAAUC,EAAKC,MAAMF,SACrBG,OAAQF,EAAKC,MAAME,WACnBC,KAAM,GACNC,KAAM,KACNb,SAAU,KACVc,KAAM,GACN5B,KAAMsB,EAAKC,MAAMM,YAAY7B,KAC7BF,MAAOwB,EAAKC,MAAMM,YAAY/B,MAC9BF,IAAK0B,EAAKC,MAAMM,YAAYjC,KAE9BkC,OAAQ,MAGVC,kBAAoB,SAACC,EAAOC,GAC1BX,EAAKY,SAAS,CACZd,YAAYe,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAKH,MAAMC,YAAlBe,OAAAE,EAAA,EAAAF,CAAA,GAAgCF,EAAKP,KAAqB,SAAdO,EAAKP,KAAkBpB,EAAgB2B,EAAK1B,OAAS0B,EAAK1B,aAIrH+B,SAAW,SAACL,GACV,IAAMH,EAAS,GAsBf,OArBKS,IAAUC,UAAUP,EAAKL,QAC5BE,EAAOF,KAAO,iCAEXK,EAAKP,OACRI,EAAOJ,KAAP,uBAEGO,EAAKN,OACRG,EAAOH,KAAP,uBAEGM,EAAKnB,WACRgB,EAAOhB,SAAP,2BAEGmB,EAAKjC,OACR8B,EAAO9B,KAAP,uBAEGiC,EAAKnC,QACRgC,EAAOhC,MAAP,wBAEGmC,EAAKrC,MACRkC,EAAOlC,IAAP,sBAEKkC,KAGTW,0BAA4B,WAC1B,IAAMX,EAASR,EAAKgB,SAAShB,EAAKH,MAAMC,aACxCE,EAAKY,SAAS,CAAEJ,WACmB,IAA/BK,OAAOO,KAAKZ,GAAQa,QACtBrB,EAAKC,MAAMqB,sBAAsBtB,EAAKH,MAAMC,sFAK9C,IAAMyB,GAAsBC,KAAK3B,MAAMC,YAAYO,KAC7CoB,EAAkBD,KAAK3B,MAAMC,YAAYO,KAAOb,EAASgC,KAAK3B,MAAMC,YAAYO,MAAQ,KACxFG,EAASgB,KAAK3B,MAAMW,OAEpBkB,EADOb,OAAOO,KAAKZ,GACEmB,IAAI,SAAAC,GAAG,OAChCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,IAAKA,EACL1D,OAAK,EACL+D,OAAQL,EACRM,QAAS1B,EAAOoB,OAGpB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM9D,MAAgC,IAAzBwD,EAAcL,QACxBK,EACDG,EAAAC,EAAAC,cAACC,EAAA,EAAKG,MAAN,CAAYC,OAAO,SACjBP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,SACZrD,MAAOuC,KAAK3B,MAAMC,YAAYI,OAC9BqC,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASlB,KAAKvB,MAAM0C,YACpBvC,KAAK,YAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,OACZrD,MAAOuC,KAAK3B,MAAMC,YAAYM,KAC9BmC,SAAUf,KAAKf,kBACfgC,OAAK,EACLrC,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,OACZrD,MAAOuC,KAAK3B,MAAMC,YAAYO,KAC9BkC,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAAS/C,EACTS,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEY,SAAUrB,EACVe,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMC,YAAYN,SAC9B+C,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASjB,EACTrB,KAAK,cAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,OACZrD,MAAuC,KAAhCuC,KAAK3B,MAAMC,YAAYQ,KAAckB,KAAK3B,MAAMC,YAAYQ,KAAO1B,EAAc4C,KAAK3B,MAAMC,YAAYQ,MAC/GiC,SAAUf,KAAKf,kBACfgC,OAAK,EACLrC,KAAK,WAKXyB,EAAAC,EAAAC,cAACC,EAAA,EAAKG,MAAN,CAAYC,OAAO,SACjBP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMC,YAAYpB,KAC9B6D,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASvD,EACTiB,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,QACZrD,MAAOuC,KAAK3B,MAAMC,YAAYtB,MAC9B+D,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASrD,EACTe,KAAK,WAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,MACZrD,MAAOuC,KAAK3B,MAAMC,YAAYxB,IAC9BiE,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASnD,EACTa,KAAK,UAKXyB,EAAAC,EAAAC,cAACC,EAAA,EAAKG,MAAN,CAAaC,OAAO,SAClBP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEa,QAASrB,KAAKL,0BACd2B,SAAS,SACTC,OAAK,EACLC,MAAM,SAJR,QAUFnB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,SAAS,SACTC,OAAK,EACLC,MAAM,MACNH,QAASrB,KAAKvB,MAAMgD,eAJtB,oBArLqBC,aC+ClBC,6MApDbtD,MAAQ,CACNuD,kBAAkB,KAGpBC,qBAAuB,kBAAMrD,EAAKY,SAAS,CACzCwC,kBAAkB,OAGpBE,wBAA0B,kBAAMtD,EAAKY,SAAS,CAC5CwC,kBAAkB,OAGpBjC,0BAA4B,SAACrB,GAC3BE,EAAKC,MAAMqB,sBAAsBxB,GACjCE,EAAKY,SAAS,CAAEwC,kBAAkB,6EAIlC,OAAI5B,KAAK3B,MAAMuD,iBAEXvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuB,UAAU,UAChB1B,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,KACA3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,KAAK,OACLT,MAAM,QACNH,QAASrB,KAAK6B,yBAOlBxB,EAAAC,EAAAC,cAAC2B,EAAD,CACE3D,SAAUyB,KAAKvB,MAAMF,SACrB4C,YAAanB,KAAKvB,MAAM0C,YACxBxC,WAAYqB,KAAKvB,MAAME,WACvBI,YAAaiB,KAAKvB,MAAMM,YACxB0C,cAAezB,KAAK8B,wBACpBhC,sBAAuBE,KAAKL,mCAvCF+B,aCqMnBS,6MA9Lb9D,MAAQ,CACN+D,WAAW,EACX9D,YAAa,CACX+D,GAAI7D,EAAKC,MAAM4D,GACfzD,KAAMJ,EAAKC,MAAMG,KACjBC,KAAML,EAAKC,MAAMI,KACjBb,SAAUQ,EAAKC,MAAMT,SACrBc,KAAMwD,OAAO9D,EAAKC,MAAMK,MACxB5B,KAAMsB,EAAKC,MAAMvB,KACjBF,MAAOwB,EAAKC,MAAMzB,MAClBF,IAAK0B,EAAKC,MAAM3B,KAElBkC,OAAQ,MAGVuD,gBAAkB,kBAAM/D,EAAKY,SAAS,CAAEgD,WAAW,OAEnDI,iBAAmB,kBAAMhE,EAAKY,SAAS,CAAEgD,WAAW,OAEpD5C,SAAW,SAAClB,GACV,IAAMU,EAAS,GAsBf,OArBKS,IAAUC,UAAUpB,EAAYQ,QACnCE,EAAOF,KAAO,iCAEXR,EAAYM,OACfI,EAAOJ,KAAP,uBAEGN,EAAYO,OACfG,EAAOH,KAAP,uBAEGP,EAAYN,WACfgB,EAAOhB,SAAP,2BAEGM,EAAYpB,OACf8B,EAAO9B,KAAP,uBAEGoB,EAAYtB,QACfgC,EAAOhC,MAAP,wBAEGsB,EAAYxB,MACfkC,EAAOlC,IAAP,sBAEKkC,KAGTyD,6BAA+B,WAC7B,IAAMzD,EAASR,EAAKgB,SAAShB,EAAKH,MAAMC,aACxCE,EAAKY,SAAS,CAAEJ,WACmB,IAA/BK,OAAOO,KAAKZ,GAAQa,SACtBrB,EAAKY,SAAS,CAAEgD,WAAW,IAC3B5D,EAAKC,MAAMiE,yBAAyBlE,EAAKH,MAAMC,iBAInDW,kBAAoB,SAACC,EAAOC,GAAR,OAAiBX,EAAKY,SAAS,CACjDd,YAAYe,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAKH,MAAMC,YAAlBe,OAAAE,EAAA,EAAAF,CAAA,GAAgCF,EAAKP,KAAqB,SAAdO,EAAKP,KAAkBpB,EAAgB2B,EAAK1B,OAAS0B,EAAK1B,mFAIjH,IAAMuB,EAASgB,KAAK3B,MAAMW,OAEpBkB,EADOb,OAAOO,KAAKZ,GACEmB,IAAI,SAAAC,GAAG,OAChCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,IAAKA,EACL1D,OAAK,EACL+D,OAAQL,EACRM,QAAS1B,EAAOoB,OAGdH,EAAkBD,KAAK3B,MAAMC,YAAYO,KAAOb,EAASgC,KAAK3B,MAAMC,YAAYO,MAAQ,KAC9F,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmC,QAAStC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,SAAST,MAAM,QAAQD,OAAK,EAACF,QAASrB,KAAKuC,kBACjEK,KAAM5C,KAAK3B,MAAM+D,UACjBS,QAAS7C,KAAK8C,YACdvB,OAAK,EACLwB,KAAK,SAEL1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,SAASvB,QAAQ,uBAC9BL,EAAAC,EAAAC,cAACC,EAAA,EAAMwC,QAAP,KACE3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM9D,MAAgC,IAAzBwD,EAAcL,QACxBK,EAEDG,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMC,YAAYM,KAC9BmC,SAAUf,KAAKf,kBACfgC,OAAK,EACLrC,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,OACZrD,MAAOuC,KAAK3B,MAAMC,YAAYO,KAC9BkC,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAAS/C,EACTS,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEY,UAAWnB,EACXa,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMC,YAAYN,SAC9B+C,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASjB,EACTrB,KAAK,cAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,OACZrD,MAAOL,EAAc4C,KAAK3B,MAAMC,YAAYQ,MAC5CiC,SAAUf,KAAKf,kBACfgC,OAAK,EACLrC,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,OACZrD,MAAOuC,KAAK3B,MAAMC,YAAYpB,KAC9B6D,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASvD,EACTiB,KAAK,UAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,QACZrD,MAAOuC,KAAK3B,MAAMC,YAAYtB,MAC9B+D,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASrD,EACTe,KAAK,WAITyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,MACZrD,MAAOuC,KAAK3B,MAAMC,YAAYxB,IAC9BiE,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASnD,EACTa,KAAK,WAMbyB,EAAAC,EAAAC,cAACC,EAAA,EAAMyC,QAAP,KACE5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,QAAQH,QAASrB,KAAKyC,6BAA8BS,UAAQ,GACxE7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,WAGAyB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,MAAMH,QAASrB,KAAKwC,iBAAkBU,UAAQ,GAC1D7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,mBA1K0B8C,aC0DrByB,6MAhEb9E,MAAQ,CACN+D,WAAW,EACXgB,eAAgB5E,EAAKC,MAAM4D,GAC3BzD,KAAMJ,EAAKC,MAAMG,KACjBC,KAAML,EAAKC,MAAMI,KACjBb,SAAUQ,EAAKC,MAAMT,SACrBc,KAAMN,EAAKC,MAAMK,KACjB5B,KAAMsB,EAAKC,MAAMvB,KACjBF,MAAOwB,EAAKC,MAAMzB,MAClBF,IAAK0B,EAAKC,MAAM3B,OAGlBuG,mBAAqB,WACnB7E,EAAKC,MAAM6E,aAAa9E,EAAKH,MAAM+E,gBACnC5E,EAAKY,SAAS,CAAEgD,WAAW,OAG7BG,gBAAkB,kBAAM/D,EAAKY,SAAS,CAAEgD,WAAW,OAEnDI,iBAAmB,kBAAMhE,EAAKY,SAAS,CAAEgD,WAAW,6EAGlD,OACE/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmC,QAAStC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,QAAQV,OAAK,EAACC,MAAM,MAAMH,QAASrB,KAAKuC,kBAC9DK,KAAM5C,KAAK3B,MAAM+D,UACjBS,QAAS7C,KAAK8C,YACdvB,OAAK,EACLwB,KAAK,SAEL1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,QAAQvB,QAAQ,uBAC7BL,EAAAC,EAAAC,cAACC,EAAA,EAAMwC,QAAP,qDAEE3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+C,UAAQ,GACZlD,EAAAC,EAAAC,cAACC,EAAA,EAAKgD,KAAN,cACSxD,KAAK3B,MAAMO,MAEpByB,EAAAC,EAAAC,cAACC,EAAA,EAAKgD,KAAN,cACSxD,KAAK3B,MAAMQ,MAEpBwB,EAAAC,EAAAC,cAACC,EAAA,EAAKgD,KAAN,kBACaxD,KAAK3B,MAAML,UAExBqC,EAAAC,EAAAC,cAACC,EAAA,EAAKgD,KAAN,cACSpG,EAAc4C,KAAK3B,MAAMS,OAElCuB,EAAAC,EAAAC,cAACC,EAAA,EAAKgD,KAAN,iBACYxD,KAAK3B,MAAMnB,KADvB,IAC8B8C,KAAK3B,MAAMrB,MADzC,IACiDgD,KAAK3B,MAAMvB,OAIhEuD,EAAAC,EAAAC,cAACC,EAAA,EAAMyC,QAAP,KACE5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,QAAQH,QAASrB,KAAKqD,mBAAoBH,UAAQ,GAC9D7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,YAGAyB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,MAAMH,QAASrB,KAAKwC,iBAAkBU,UAAQ,GAC1D7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,oBAxDwB8C,aCqDnB+B,EAlDY,SAAChF,GAC1B,IAAM+C,EAAuB,WAAf/C,EAAMI,KAAoB,YAAc,MACtD,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAAMwB,IAAP,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAMkD,KAAP,KAAajF,EAAMG,MACnByB,EAAAC,EAAAC,cAACC,EAAA,EAAMkD,KAAP,KAAajF,EAAMT,UACnBqC,EAAAC,EAAAC,cAACC,EAAA,EAAMkD,KAAP,CAAYC,MAAO,CAACnC,MAASA,IAA7B,GAAA1F,OAAyC2C,EAAMmF,SAA/C,KAAA9H,OAA2DsB,EAAcqB,EAAMK,QAC/EuB,EAAAC,EAAAC,cAACC,EAAA,EAAMkD,KAAP,QAAA5H,OAAgB2C,EAAMvB,KAAtB,KAAApB,OAA8B2C,EAAMzB,MAApC,KAAAlB,OAA6C2C,EAAM3B,MACnDuD,EAAAC,EAAAC,cAACC,EAAA,EAAMkD,KAAP,KACErD,EAAAC,EAAAC,cAACsD,EAAD,CACExB,GAAI5D,EAAM4D,GACVzD,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZb,SAAUS,EAAMT,SAChBc,KAAML,EAAMK,KACZ5B,KAAMuB,EAAMvB,KACZF,MAAOyB,EAAMzB,MACbF,IAAK2B,EAAM3B,IACXwG,aAAc7E,EAAM6E,eAEtBjD,EAAAC,EAAAC,cAACuD,EAAD,CACEzB,GAAI5D,EAAM4D,GACVzD,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZb,SAAUS,EAAMT,SAChBc,KAAML,EAAMK,KACZ5B,KAAMuB,EAAMvB,KACZF,MAAOyB,EAAMzB,MACbF,IAAK2B,EAAM3B,IACX4F,yBAA0BjE,EAAMiE,8BCwB3BqB,6MAtDbC,iBAAmB,SAAC3B,GAClB,IAAM/D,EAAc,CAClBC,SAAUC,EAAKC,MAAMF,SACrBG,OAAQF,EAAKC,MAAME,WACnB0D,MAEF7D,EAAKC,MAAM6E,aAAahF,4EAEjB,IAAA2F,EAAAjE,KACDkE,EAAelE,KAAKvB,MAAMyF,aAAaC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAWA,EAAEtH,IAAMwD,EAAExD,MAAMqD,IAAI,SAAA7B,GAAW,OAC1F+B,EAAAC,EAAAC,cAAC8D,EAAD,CACEjE,IAAK9B,EAAYgG,IACjBjC,GAAI/D,EAAYgG,IAChB1F,KAAMN,EAAYM,KAClBC,KAAMP,EAAYO,KAClBb,SAAUM,EAAYN,SACtBd,KAAMoB,EAAYpB,KAClBF,MAAOsB,EAAYtB,MACnBF,IAAKwB,EAAYxB,IACjBgC,KAAMR,EAAYQ,KAClB8E,SAAUK,EAAKxF,MAAMmF,SACrBN,aAAc,kBAAMW,EAAKD,iBAAiB1F,EAAYgG,MACtD5B,yBAA0BuB,EAAKxF,MAAMiE,6BAIzC,OACErC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+D,SAAO,GACZlE,EAAAC,EAAAC,cAACC,EAAA,EAAMgE,OAAP,KACEnE,EAAAC,EAAAC,cAACC,EAAA,EAAMwB,IAAP,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAMiE,WAAP,aACApE,EAAAC,EAAAC,cAACC,EAAA,EAAMiE,WAAP,iBACApE,EAAAC,EAAAC,cAACC,EAAA,EAAMiE,WAAP,aACApE,EAAAC,EAAAC,cAACC,EAAA,EAAMiE,WAAP,aACApE,EAAAC,EAAAC,cAACC,EAAA,EAAMiE,WAAP,QAGJpE,EAAAC,EAAAC,cAACC,EAAA,EAAMkE,KAAP,KACGR,WAvCUxC,+BCkBNiD,EAvBI,CACjB,CACE/G,KAAM,gBACNH,MAAO,KACPK,KAAM,OAER,CACEF,KAAM,eACNH,MAAO,KACPK,KAAM,UAER,CACEF,KAAM,kBACNH,MAAO,KACPK,KAAM,OAER,CACEF,KAAM,YACNH,MAAO,KACPK,KAAM,QC6GK8G,6MAxHbvG,MAAQ,CACN+D,WAAW,EACX1D,OAAQ,CACNE,KAAM,GACNgF,SAAU,GACViB,YAAa,IAEf7F,OAAQ,MAGVuD,gBAAkB,kBAAM/D,EAAKY,SAAS,CAAEgD,WAAW,OAEnDI,iBAAmB,kBAAMhE,EAAKY,SAAS,CAAEgD,WAAW,OAEpD5C,SAAW,SAACd,GACV,IAAMM,EAAS,GAWf,OAVKN,EAAOE,OACVI,EAAOJ,KAAP,uBAEGF,EAAOkF,WACV5E,EAAO4E,SAAP,2BAGGlE,IAAUhB,EAAOmG,eACpB7F,EAAO6F,YAAP,0CAEK7F,KAGT8F,qBAAuB,WACrB,IAAM9F,EAASR,EAAKgB,SAAShB,EAAKH,MAAMK,QACxCF,EAAKY,SAAS,CAAEJ,WACmB,IAA/BK,OAAOO,KAAKZ,GAAQa,SACtBrB,EAAKC,MAAMsG,iBAAiBvG,EAAKH,MAAMK,QACvCF,EAAKY,SAAS,CACZgD,WAAW,EACX1D,OAAQ,CACNE,KAAM,GACNgF,SAAU,GACViB,YAAa,UAMrB5F,kBAAoB,SAACC,EAAOC,GAAR,OAAiBX,EAAKY,SAAS,CACjDV,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAKH,MAAMK,OAAlBW,OAAAE,EAAA,EAAAF,CAAA,GAA2BF,EAAKP,KAAqB,gBAAdO,EAAKP,KAAyBpB,EAAgB2B,EAAK1B,OAAS0B,EAAK1B,mFAI9G,IAAMuB,EAASgB,KAAK3B,MAAMW,OAEpBkB,EADOb,OAAOO,KAAKZ,GACEmB,IAAI,SAAAC,GAAG,OAChCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,IAAKA,EACL1D,OAAK,EACL+D,OAAQL,EACRM,QAAS1B,EAAOoB,OAGpB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmC,QAAStC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,OAAOhB,OAAK,EAACO,MAAM,MAAMH,QAASrB,KAAKuC,kBAC7DK,KAAM5C,KAAK3B,MAAM+D,UACjBS,QAAS7C,KAAK8C,YACdvB,OAAK,EACLwB,KAAK,SAEL1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,WAAWvB,QAAQ,eAChCL,EAAAC,EAAAC,cAACC,EAAA,EAAMwC,QAAP,KACE3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM9D,MAAgC,IAAzBwD,EAAcL,QACxBK,EACDG,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMK,OAAOE,KACzBmC,SAAUf,KAAKf,kBACf6B,YAAY,OACZG,OAAK,EACLrC,KAAK,UAGTyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMK,OAAOkF,SACzB7C,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASyD,EACT/F,KAAK,cAGTyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAyC,KAAlCuC,KAAK3B,MAAMK,OAAOmG,YAAqB7E,KAAK3B,MAAMK,OAAOmG,YAAczH,EAAc4C,KAAK3B,MAAMK,OAAOmG,aAC9G9D,SAAUf,KAAKf,kBACf6B,YAAY,eACZG,OAAK,EACLrC,KAAK,mBAKbyB,EAAAC,EAAAC,cAACC,EAAA,EAAMyC,QAAP,KACE5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,QAAQH,QAASrB,KAAK8E,qBAAsB5B,UAAQ,GAChE7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,SADb,QAGAyB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,MAAMH,QAASrB,KAAKwC,iBAAkBU,UAAQ,GAC1D7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,mBA5GkB8C,aCwBbsD,EA3BI,SAACvG,GAAD,OACjB4B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,0CACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,eACZxG,EAAMyG,UAAY,IAEpBzG,EAAM0G,WAAa,GACpB9E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,QACb5E,EAAAC,EAAAC,cAAC6E,EAAD,CACEL,iBAAkBtG,EAAMsG,oBAG5B1E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,QACb5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6E,UAAQ,EACR7D,MAAM,OACNP,OAAK,EACLI,QAAS5C,EAAM6G,gBAJjB,cAUD7G,EAAMyG,UAAY7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ+E,QAAM,MCiPxBC,6MAjQbnH,MAAQ,CACNoH,gBAAgB,EAChBC,QAAS,GACTR,SAAU,MAyBZS,gBAAkB,WAChBnK,EAAgB,SAAA2D,GACdX,EAAKY,SAAS,CAAEsG,QAASvG,EAAKuG,eAIlCZ,qBAAuB,SAACpG,IfuDnB,SAAsBS,GAC3B,IAAMzD,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,kEAAAC,OAAqEJ,GAC9E,OAAOK,MAAMF,EAAK,CAChB+J,OAAQ,OACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,uBe9DlBC,CAAavH,GACVxC,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBF,KAAK,SAAAI,GACJ,GAAIA,EAAII,MAEN,MADA8B,EAAKY,SAAS,CAAEqG,gBAAgB,IAC1B,IAAIS,MAAM,oBAGnBhK,KAAK,kBAAMsC,EAAKmH,oBAChBzJ,KAAK,kBAAMsC,EAAK2H,gBAChB5J,MAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,QAGhCmD,0BAA4B,SAACrB,IfexB,SAA2Ba,GAChC,IAAMzD,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,uEAAAC,OAA0EJ,GACnF,OAAOK,MAAMF,EAAK,CAChB+J,OAAQ,OACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,uBetBlBI,CAAkB9H,GACfpC,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBF,KAAK,SAAAI,GACJ,GAAIA,EAAII,MAEN,MADA8B,EAAKY,SAAS,CAAEqG,gBAAgB,IAC1B,IAAIS,MAAM,oBAGnBhK,KAAK,kBAAMsC,EAAKmH,oBAChBzJ,KAAK,kBAAMsC,EAAK2H,gBAChB5J,MAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,QAGhCiG,6BAA+B,SAACnE,Ifc3B,SAA2Ba,GAChC,IAAMzD,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,uEAAAC,OAA0EJ,GACnF,OAAOK,MAAMF,EAAK,CAChB+J,OAAQ,MACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,uBerBlBK,CAAkB/H,GACfpC,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBF,KAAK,SAAAI,GACJ,GAAIA,EAAII,MAEN,MADA8B,EAAKY,SAAS,CAAEqG,gBAAgB,IAC1B,IAAIS,MAAM,oBAGnBhK,KAAK,kBAAMsC,EAAKmH,oBAChBzJ,KAAK,kBAAMsC,EAAK2H,gBAChB5J,MAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,QAGhCwH,iBAAmB,SAAC1F,IfzEf,SAA2Ba,GAChC,IAAMzD,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,uEAAAC,OAA0EJ,GACnF,OAAOK,MAAMF,EAAK,CAChB+J,OAAQ,SACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,uBekElBM,CAAkBhI,GACfpC,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBF,KAAK,SAAAI,GACJ,GAAIA,EAAII,MAEN,MADA8B,EAAKY,SAAS,CAAEqG,gBAAgB,IAC1B,IAAIS,MAAM,oBAGnBhK,KAAK,kBAAMsC,EAAKmH,oBAChBzJ,KAAK,kBAAMsC,EAAK2H,mBAGrBI,mBAAqB,WACnB5K,aAAa6K,WAAW,kBACnBhI,EAAKH,MAAMoH,gBACdjH,EAAKY,SAAS,CAAEqG,gBAAgB,IAElCjH,EAAK2H,0GAvFAxK,aAAaC,QAAQ,mBACxBoE,KAAKZ,SAAS,CAAEqG,gBAAgB,gDAIhB,IAAAxB,EAAAjE,KAClB3D,IAAaH,KAAK,SAAAI,GAChB,GAAIA,EAAII,MAKN,MAJAf,aAAa6K,WAAW,kBACnBvC,EAAK5F,MAAMoH,gBACdxB,EAAK7E,SAAS,CAAEqG,gBAAgB,IAE5B,IAAIS,MAAM,sBAEhBjC,EAAK7E,SAAS,CAAE8F,SAAU5I,EAAI4I,aAG/BhJ,KAAK,kBAAM+H,EAAK0B,oBAChBpJ,MAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,sCAwErB,IAAAiK,EAAAzG,KACP,GAAIA,KAAK3B,MAAMoH,eACb,OACEpF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,GAAG,YAIT,IAAM5H,EAAcpC,IACpB,GAAIqD,KAAK3B,MAAMqH,QAAQ7F,OAAS,EAAG,CACjC,IAAMsF,EAAYnF,KAAK3B,MAAMqH,QAAQvF,IAAI,SAAAzB,GAAM,OAC7C2B,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACE3B,UAAU,OACV7E,IAAK1B,EAAO4F,IACZqC,GAAE,YAAA7K,OAAc4C,EAAO4F,MAEvBjE,EAAAC,EAAAC,cAAA,KAAG0E,UAAS,GAAAnJ,OAAK4C,EAAOkF,SAAZ,WAAgClF,EAAOE,QAGvD,OACEyB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsG,EAAD,CACE1B,UAAWA,EACXJ,iBAAkB/E,KAAK8E,qBACvBI,SAAUlF,KAAK3B,MAAM6G,SACrBI,eAAgBtF,KAAKuG,qBAGvBlG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEC,KAAK,kCACLC,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACHxI,EAAS+H,EAAKpI,MAAMqH,QAAQyB,KAAK,SAAAC,GAAC,OACtCA,EAAE9C,MAAQ4C,EAAMG,OAAO9I,WAQnB+I,EANQ5I,EAAOwF,aAAa/D,IAAI,SAAA7B,GACpC,MAAyB,WAArBA,EAAYO,KACP,EAAIP,EAAYQ,KAElBR,EAAYQ,OAEUyI,OAAO,SAACjH,EAAG8D,GAAJ,OAAU9D,EAAI8D,GAAG,GAEjDoD,EAA2B9I,EAAOwF,aAAauD,OAAO,SAAAnJ,GAAW,OACrEA,EAAYtB,QAAU0K,OAAOR,EAAMG,OAAOrK,QAAUsB,EAAYpB,OAASwK,OAAOR,EAAMG,OAAOnK,QAQzFyK,EANiBH,EAAyBrH,IAAI,SAAA7B,GAClD,MAAyB,WAArBA,EAAYO,MAA8C,gBAAzBP,EAAYN,SACxC,EAEFM,EAAYQ,OAEsByI,OAAO,SAACjH,EAAG8D,GAAJ,OAAU9D,EAAI8D,GAAG,GAC7DjD,EAAcsF,EAAKpI,MAAMqH,QAAQvF,IAAI,SAAAiH,GAAC,MAC1C,CACExJ,KAAMwJ,EAAExI,KACRnB,MAAO2J,EAAExI,QAGPgJ,EAAejD,EAAW8C,OAAO,SAAAI,GAAC,OAAIA,EAAEpK,QAAUiB,EAAOkF,WAAU,GAAG9F,KACtEgK,EAAcjK,EAAO4J,OAAO,SAAAM,GAAC,OAAIA,EAAEtK,QAAUiK,OAAOR,EAAMG,OAAOrK,SAAQ,GAAGc,KAClF,OACAuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASwH,QAAM,GACb3H,EAAAC,EAAAC,cAAC0H,EAAD,CACE9G,YAAaA,EACb5C,SAAUG,EAAO4F,IACjB3F,WAAYD,EAAOE,KACnBkB,sBAAuB2G,EAAK9G,0BAC5BZ,YAAaA,IAGfsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuC,KAAK,OAAOhB,UAAU,SAASP,MAAM,QAA7C,GAAA1F,OACMgM,EADN,MAAAhM,OACsBoL,EAAMG,OAAOnK,OAEnCmD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,SAASP,MAAM,OAAjC,gBACgBoG,EADhB,IAC+BxK,EAAcuK,IAE7CtH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,SAASP,MAAM,SAAjC,oBACoBoG,EADpB,IACmCxK,EAAcsB,EAAOmG,YAAcyC,IAGtEjH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuB,UAAU,SAASmG,QAAS,GAChC7H,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAUkG,QAAS,GACjB7H,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEzB,GAAKe,OAAOR,EAAMG,OAAOrK,OAAS,EAA7B,YAAAlB,OACS4C,EAAO4F,IADhB,KAAAxI,OACuBoL,EAAMG,OAAOnK,KADpC,KAAApB,OAC4C4L,OAAOR,EAAMG,OAAOrK,OAAS,GADzE,YAAAlB,OAES4C,EAAO4F,IAFhB,KAAAxI,OAEuB4L,OAAOR,EAAMG,OAAOnK,MAAQ,EAFnD,QAKLmD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEe,OAAK,EACLC,MAAM,QAFR,cAQJnB,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEzB,GAAE,YAAA7K,OAAc4C,EAAO4F,IAArB,KAAAxI,OAA4BoL,EAAMG,OAAOnK,KAAzC,KAAApB,OAAiDoL,EAAMG,OAAOrK,QAEhEqD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6E,UAAQ,EACR7D,MAAM,QAFR,YAQJnB,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEzB,GAAKe,OAAOR,EAAMG,OAAOrK,OAAS,GAA7B,YAAAlB,OACS4C,EAAO4F,IADhB,KAAAxI,OACuBoL,EAAMG,OAAOnK,KADpC,KAAApB,OAC4C4L,OAAOR,EAAMG,OAAOrK,OAAS,GADzE,YAAAlB,OAES4C,EAAO4F,IAFhB,KAAAxI,OAEuB4L,OAAOR,EAAMG,OAAOnK,MAAQ,EAFnD,OAKLmD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEe,OAAK,EACLC,MAAM,QAFR,YAWRnB,EAAAC,EAAAC,cAAC8H,EAAD,CACEnE,aAAcsD,EACd5D,SAAUgE,EACVjJ,WAAYD,EAAOE,KACnBuC,YAAaA,EACb5C,SAAUG,EAAO4F,IACjBhB,aAAcmD,EAAKzC,iBACnBtB,yBAA0B+D,EAAKhE,mCAMvCpC,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOwB,OAAK,EACVvB,KAAK,sBACLC,OAAQ,SAAAuB,GAAA,IAAGrB,EAAHqB,EAAGrB,MAAH,OACN7G,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,GAAE,YAAA7K,OAAcoL,EAAMG,OAAO9I,SAA3B,KAAAzC,OAAuCiD,EAAY7B,KAAnD,KAAApB,OAA2DiD,EAAY/B,aAOrF,OACEqD,EAAAC,EAAAC,cAACsG,EAAD,CACE9B,iBAAkB/E,KAAK8E,qBACvBQ,eAAgBtF,KAAKuG,4BA5PJ7E,aCuGV8G,6MA3GbnK,MAAQ,CACNoK,YAAY,EACZC,KAAM,CACJC,SAAU,GACVzD,SAAU,GACV0D,SAAU,IAEZ5J,OAAQ,MAGVC,kBAAoB,SAACC,GACnBV,EAAKY,SAAS,CACZsJ,KAAKrJ,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAKH,MAAMqK,KAAlBrJ,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAM2J,OAAOjK,KAAOM,EAAM2J,OAAOpL,aAIlE+B,SAAW,SAACkJ,GACV,IAAM1J,EAAS,GAUf,OATK0J,EAAKC,WACR3J,EAAO2J,SAAP,2BAEGD,EAAKxD,WACRlG,EAAOkG,SAAP,2BAEGwD,EAAKE,WACR5J,EAAO4J,SAAP,2BAEK5J,KAGT8J,kBAAoB,WAClB,IhBmBmB3J,EAAM1D,EgBnBnBuD,EAASR,EAAKgB,SAAShB,EAAKH,MAAMqK,MACxClK,EAAKY,SAAS,CAAEJ,WACmB,IAA/BK,OAAOO,KAAKZ,GAAQa,ShBiBLV,EgBhBVX,EAAKH,MAAMqK,KhBgBKjN,EgBhBC,SAAAa,GACtB,GAAIA,EAAII,MAAO,CACb,IAAMqM,EAAe,CAACC,OAAQ1M,EAAI2M,SAClCzK,EAAKY,SAAS,CAAEJ,OAAQ+J,SAExBpN,aAAauN,QAAQ,iBAAkB5M,EAAIZ,OAC3C8C,EAAKY,SAAS,CAAEqJ,YAAY,KhBY7B1M,MADK,gEACM,CAChB6J,OAAQ,OACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,sBAGjB9J,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAKT,6EgBdN,IAAMuD,EAASgB,KAAK3B,MAAMW,OAEpBkB,EADOb,OAAOO,KAAKZ,GACEmB,IAAI,SAAAC,GAAG,OAChCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE9D,OAAK,EACL+D,OAAQL,EACRM,QAAS1B,EAAOoB,OAGpB,OAAKJ,KAAK3B,MAAMoK,WA+CTpI,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAUC,GAAG,aA7ChBtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASwH,QAAM,GACb3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,oBAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM9D,MAAgC,IAAzBwD,EAAcL,QAC1BK,EACCG,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,0BACZrD,MAAOuC,KAAK3B,MAAMqK,KAAKxD,SACvBtG,KAAK,WACLmC,SAAUf,KAAKf,qBAGnBoB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMqK,KAAKC,SACvB/J,KAAK,WACLmC,SAAUf,KAAKf,qBAGnBoB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMqK,KAAKE,SACvBhK,KAAK,WACLmC,SAAUf,KAAKf,kBACfJ,KAAK,cAGTwB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACES,OAAK,EACLM,OAAK,EACLC,MAAM,QACNH,QAASrB,KAAK8I,mBAJhB,oBA3FOpH,aCkINyH,6MAjIb9K,MAAQ,CACNhC,YAAY,EACZ+M,YAAY,EACZV,KAAM,CACJC,SAAU,GACVC,SAAU,IAEZ5J,OAAQ,MAgBVC,kBAAoB,SAACC,GACnBV,EAAKY,SAAS,CACZsJ,KAAKrJ,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAKH,MAAMqK,KAAlBrJ,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAM2J,OAAOjK,KAAOM,EAAM2J,OAAOpL,aAIlE+B,SAAW,SAACkJ,GACV,IAAM1J,EAAS,GAOf,OANK0J,EAAKC,WACR3J,EAAO2J,SAAP,2BAEGD,EAAKE,WACR5J,EAAO4J,SAAP,2BAEK5J,KAGTqK,kBAAoB,WAClB,IjBLmBlK,EAAM1D,EiBKnBuD,EAASR,EAAKgB,SAAShB,EAAKH,MAAMqK,MACxClK,EAAKY,SAAS,CAAEJ,WACmB,IAA/BK,OAAOO,KAAKZ,GAAQa,SjBPLV,EiBQVX,EAAKH,MAAMqK,KjBRKjN,EiBQC,SAAAa,GACtB,GAAIA,EAAII,MAAO,CACb,IAAMqM,EAAe,CAACC,OAAQ1M,EAAI2M,SAClCzK,EAAKY,SAAS,CAAEJ,OAAQ+J,SAExBpN,aAAauN,QAAQ,iBAAkB5M,EAAIZ,OAC3C8C,EAAKY,SAAS,CAAE/C,YAAY,KjBZ7BN,MADK,gEACM,CAChB6J,OAAQ,OACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,sBAGjB9J,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAKT,OiBSRqN,kBAAoB,WAClBtK,EAAKY,SAAS,CAAEgK,YAAY,gGA9CvBzN,aAAaC,QAAQ,mBACxBoE,KAAKZ,SAAS,CAAE/C,YAAY,gDAGZ,IAAA4H,EAAAjE,KAClB3D,IAAaH,KAAK,SAAAI,GACXA,EAAII,OACPuH,EAAK7E,SAAS,CAAE/C,YAAY,uCA2ChC,IAAM2C,EAASgB,KAAK3B,MAAMW,OAEpBkB,EADOb,OAAOO,KAAKZ,GACEmB,IAAI,SAAAC,GAAG,OAChCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE9D,OAAK,EACL+D,OAAQL,EACRM,QAAS1B,EAAOoB,OAGpB,OAAIJ,KAAK3B,MAAM+K,WACN/I,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAUC,GAAG,YAGjB3G,KAAK3B,MAAMhC,WAmDTgE,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAUC,GAAG,aAjDhBtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASwH,QAAM,GACb3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,oBAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM9D,MAAgC,IAAzBwD,EAAcL,QACxBK,EACDG,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMqK,KAAKC,SACvB/J,KAAK,WACLmC,SAAUf,KAAKf,qBAGnBoB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,YAAY,WACZrD,MAAOuC,KAAK3B,MAAMqK,KAAKE,SACvBhK,KAAK,WACLmC,SAAUf,KAAKf,kBACfJ,KAAK,cAGPmB,KAAK3B,MAAM3B,OAAS2D,EAAAC,EAAAC,cAAA,OAAKoD,MAAO,CAAEnC,MAAO,YAAcxB,KAAK3B,MAAM3B,OACpE2D,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACES,OAAK,EACLM,OAAK,EACLC,MAAM,QACNH,QAASrB,KAAKqJ,mBAJhB,WASFhJ,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACES,OAAK,EACLM,OAAK,EACLC,MAAM,MACNH,QAASrB,KAAK8I,mBAJhB,6BAhHOpH,aC+JN4H,6MAzJbjL,MAAQ,CACN+D,WAAW,EACXmH,OAAQ,CACNvL,SAAU,GACV4F,SAAU,GACV1G,KAAM,GACNF,MAAO,GACPwM,OAAQ,IAEVxK,OAAQ,MAGVuD,gBAAkB,kBAAM/D,EAAKY,SAAS,CACpCgD,WAAW,EACXmH,OAAQ,CACNvL,SAAUQ,EAAKC,MAAMT,UAAY,GACjC4F,SAAUpF,EAAKC,MAAMmF,UAAY,GACjC1G,KAAMsB,EAAKC,MAAMvB,MAAQ,GACzBF,MAAOwB,EAAKC,MAAMzB,OAAS,GAC3BwM,OAAQ,SAIZhH,iBAAmB,kBAAMhE,EAAKY,SAAS,CAAEgD,WAAW,OAEpD5C,SAAW,SAAC+J,GACV,IAAMvK,EAAS,GAWf,OAVKuK,EAAOvL,WACVgB,EAAOhB,SAAP,uBAEGuL,EAAO3F,WACV5E,EAAO4E,SAAP,2BAGGlE,IAAU6J,EAAOC,UACpBxK,EAAOwK,OAAP,iCAEKxK,KAGTyK,qBAAuB,WACrB,IAAMzK,EAASR,EAAKgB,SAAShB,EAAKH,MAAMkL,QACxC/K,EAAKY,SAAS,CAAEJ,WACmB,IAA/BK,OAAOO,KAAKZ,GAAQa,SACtBrB,EAAKC,MAAMiL,iBAAiBlL,EAAKH,MAAMkL,QACvC/K,EAAKY,SAAS,CACZgD,WAAW,EACXmH,OAAQ,CACNvL,SAAU,GACV4F,SAAU,GACV1G,KAAM,GACNF,MAAO,GACPwM,OAAQ,UAMhBvK,kBAAoB,SAACC,EAAOC,GAAR,OAAiBX,EAAKY,SAAS,CACjDmK,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GAAMb,EAAKH,MAAMkL,OAAlBlK,OAAAE,EAAA,EAAAF,CAAA,GAA2BF,EAAKP,KAAqB,WAAdO,EAAKP,KAAoBpB,EAAgB2B,EAAK1B,OAAS0B,EAAK1B,mFAIzG,IAAMuB,EAASgB,KAAK3B,MAAMW,OAEpBkB,EADOb,OAAOO,KAAKZ,GACEmB,IAAI,SAAAC,GAAG,OAChCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,IAAKA,EACL1D,OAAK,EACL+D,OAAQL,EACRM,QAAS1B,EAAOoB,OAGpB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmC,QAAStC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,OAAOoD,UAAQ,EAAC7D,MAAM,QAAQH,QAASrB,KAAKuC,kBAClEK,KAAM5C,KAAK3B,MAAM+D,UACjBS,QAAS7C,KAAK8C,YACdvB,OAAK,EACLwB,KAAK,SAEL1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyB,KAAK,WAAWvB,QAAQ,eAChCL,EAAAC,EAAAC,cAACC,EAAA,EAAMwC,QAAP,KACE3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM9D,MAAgC,IAAzBwD,EAAcL,QACxBK,EACDG,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMkL,OAAOvL,SACzB+C,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASlD,EAAQ,QACjBY,KAAK,cAGTyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMkL,OAAO3F,SACzB7C,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASyD,EACT/F,KAAK,cAGTyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMkL,OAAOrM,KACzB6D,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASvD,EACTiB,KAAK,UAGTyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAOuC,KAAK3B,MAAMkL,OAAOvM,MACzB+D,SAAUf,KAAKf,kBACf+B,WAAS,EACTC,OAAK,EACLC,QAASrD,EACTe,KAAK,WAGTyB,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE/C,MAAoC,KAA7BuC,KAAK3B,MAAMkL,OAAOC,OAAgBxJ,KAAK3B,MAAMkL,OAAOC,OAASpM,EAAc4C,KAAK3B,MAAMkL,OAAOC,QACpGzI,SAAUf,KAAKf,kBACf6B,YAAY,SACZG,OAAK,EACLrC,KAAK,cAKbyB,EAAAC,EAAAC,cAACC,EAAA,EAAMyC,QAAP,KACE5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,QAAQH,QAASrB,KAAKyJ,qBAAsBvG,UAAQ,GAChE7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,SADb,QAGAyB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,MAAM,MAAMH,QAASrB,KAAKwC,iBAAkBU,UAAQ,GAC1D7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,mBA7IkB8C,0DCJtBiI,8MACJtL,MAAQ,CACNuL,cAAc,EACdC,YAAa,CACXC,KAAM,CACJC,OAAQ,CACNC,SAAS,KAIfC,MAAO,CACLrM,KAAMY,EAAKC,MAAMT,UAAY,IAE/BkM,OAAQ,CAAC,CAAEtL,KAAM,QAASO,KAAM,IACvB,CAAEP,KAAM,SAAUO,KAAM,yFAGf,IAAA8E,EAAAjE,KACZkE,EAAeyF,EAAcQ,yBAAyBnK,KAAKvB,MAAMyF,cACjEqF,EAASa,MAAMC,KAAK,CAACxK,OAAQ,IAAK,SAACyK,EAAGC,GAAJ,OAAUtG,EAAKxF,MAAM8K,SAC7D,GAAI5M,IAAiBK,QAAUgD,KAAKvB,MAAMzB,MAAO,CAC/C,IAAMwN,EAAcb,EAAcc,kBAAkBvG,GACpDlE,KAAKZ,SAAS,CACZ8K,OAAQ,CAAC,CAAEtL,KAAM,QAASO,KAAM+E,EAAc1C,MAAO,OAC5C,CAAE5C,KAAM,SAAUO,KAAMoK,EAAQ/H,MAAO,QACvC,CAAE5C,KAAM,UAAWO,KAAMqL,EAAahJ,MAAO,QAASkJ,UAAW,WAG9E1K,KAAKZ,SAAS,CACZ8K,OAAQ,CAAC,CAAEtL,KAAM,QAASO,KAAM+E,EAAc1C,MAAO,OAC5C,CAAE5C,KAAM,SAAUO,KAAMoK,EAAQ/H,MAAO,4CAwC3C,IAAAiF,EAAAzG,KACP,OAAKA,KAAK3B,MAAMuL,aAgBdvJ,EAAAC,EAAAC,cAAA,OACEoD,MAAO,CAAEgH,UAAW,QACpBtJ,QAAS,kBAAMoF,EAAKrH,SAAS,CAAEwK,cAAc,MAE7CvJ,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,CACEuK,WAAYC,IACZ5J,QAASlB,KAAK3B,MACd0M,QAAQ,KArBV1K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuB,UAAU,SAAS4B,MAAO,CAAEgH,UAAW,IAC3CtK,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEa,QAAS,WACPoF,EAAKrH,SAAS,CAAEwK,cAAc,KAEhCrI,OAAK,EAACU,KAAK,aACXoD,UAAQ,EACR7D,MAAM,8DA/Cc/C,EAAOJ,GACrC,IAAM6F,EAAeyF,EAAcQ,yBAAyB1L,EAAMyF,cAC5DqF,EAASa,MAAMC,KAAK,CAACxK,OAAQ,IAAK,SAACyK,EAAGC,GAAJ,OAAU9L,EAAM8K,SACxD,OAAI5M,IAAiBK,QAAUyB,EAAMzB,MAE5B,CACLkN,OAAQ,CAAC,CAAEtL,KAAM,QAASO,KAAM+E,EAAc1C,MAAO,OAC5C,CAAE5C,KAAM,SAAUO,KAAMoK,EAAQ/H,MAAO,QACvC,CAAE5C,KAAM,UAAWO,KAJVwK,EAAcc,kBAAkBvG,GAIH1C,MAAO,QAASkJ,UAAW,UAGvE,CAAER,OAAQ,CAAC,CAAEtL,KAAM,QAASO,KAAM+E,EAAc1C,MAAO,OAC5C,CAAE5C,KAAM,SAAUO,KAAMoK,EAAQ/H,MAAO,QACvC,CAAE5C,KAAM,UAAWO,KAAM,GAAIqC,MAAO,QAASkJ,UAAW,iBA/ClDhJ,aAAtBiI,GAmDGc,kBAAoB,SAAAO,GACzB,IAEIC,EAFEC,EAAgBF,EAAiBrO,IAAiBG,KAAOH,IAAiBG,IAC1E0N,EAAWnL,OAAA8L,EAAA,EAAA9L,CAAQ2L,GAEzB,IAAKC,EAAItO,IAAiBG,IAAKmO,EAAIT,EAAY3K,OAAQoL,IACrDT,EAAYS,GAAMT,EAAYS,EAAI,GAAKC,EAEzC,OAAOV,GA1DLb,GA6DGQ,yBAA2B,SAAAa,GAChC,IACIC,EADE/G,EAAe,GAErB,IAAK+G,EAAI,EAAGA,EAAID,EAAiBnL,OAAQoL,IACvC/G,EAAakH,KAAKJ,EAAiBC,IAAM/G,EAAa+G,EAAI,IAAM,IAElE,OAAO/G,GAkCIyF,UCgPA0B,8MAhVbhN,MAAQ,CACNoH,gBAAgB,EAChB6F,gBAAiB,KACjB5F,QAAS,GACT6F,QAAS,MAwBX5F,gBAAkB,WAChBnK,EAAgB,SAAA2D,GACdX,EAAKY,SAAS,CAAEsG,QAASvG,EAAKuG,QAAS6F,QAASpM,EAAKoM,eAIzD9B,qBAAuB,SAACF,IpBoEnB,SAAsBpK,GAC3B,IAAMzD,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,kEAAAC,OAAqEJ,GAC9E,OAAOK,MAAMF,EAAK,CAChB+J,OAAQ,OACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,uBoB3ElBwF,CAAajC,GACVrN,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBF,KAAK,SAAAI,GACJ,GAAIA,EAAII,MAEN,MADA8B,EAAKY,SAAS,CAAEqG,gBAAgB,IAC1B,IAAIS,MAAM,oBAGnBhK,KAAK,kBAAMsC,EAAKmH,oBAChBzJ,KAAK,kBAAMsC,EAAK2H,gBAChB5J,MAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,QAGhCwH,iBAAmB,SAACyH,IpBmEf,SAAsBtM,GAC3B,IAAMzD,EAAQC,aAAaC,QAAQ,kBAC7BC,EAAG,kEAAAC,OAAqEJ,GAC9E,OAAOK,MAAMF,EAAK,CAChB+J,OAAQ,SACRC,KAAMC,KAAKC,UAAU5G,GACrBnD,QAAS,CACPC,OAAU,mBACV+J,eAAgB,uBoB1ElB0F,CAAa,CAACrJ,GAAIoJ,IACfvP,KAAK,SAAAI,GAAG,OAAIA,EAAIF,SAChBF,KAAK,SAAAI,GACJ,GAAIA,EAAII,MAEN,MADA8B,EAAKY,SAAS,CAAEqG,gBAAgB,IAC1B,IAAIS,MAAM,oBAGnBhK,KAAK,kBAAMsC,EAAKmH,oBAChBzJ,KAAK,kBAAMsC,EAAK2H,mBAGrBwF,mBAAqB,SAACL,GACpB9M,EAAKY,SAAS,CAAEkM,gHAtDX3P,aAAaC,QAAQ,mBACxBoE,KAAKZ,SAAS,CAAEqG,gBAAgB,gDAIhB,IAAAxB,EAAAjE,KAClB3D,IAAaH,KAAK,SAAAI,GAChB,GAAIA,EAAII,MAKN,MAJAf,aAAa6K,WAAW,kBACnBvC,EAAK5F,MAAMoH,gBACdxB,EAAK7E,SAAS,CAAEqG,gBAAgB,IAE5B,IAAIS,MAAM,sBAEhBjC,EAAK7E,SAAS,CAAE8F,SAAU5I,EAAI4I,aAE/BhJ,KAAK,kBAAM+H,EAAK0B,oBAChBpJ,MAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,sCAwCrB,IAAAiK,EAAAzG,KACP,GAAIA,KAAK3B,MAAMoH,eACb,OACEpF,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,GAAG,YAKT,IAAM5H,EAAcpC,IAEpB,OACE0D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEC,KAAK,gCACLC,OAAQ,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACL0E,EAAUlE,OAAOR,EAAMG,OAAOnK,MAC9B2O,EAAUnE,OAAOR,EAAMG,OAAOnK,MAC9B4O,EAAWpE,OAAOR,EAAMG,OAAOrK,OAAS,EACxC+O,EAAWrE,OAAOR,EAAMG,OAAOrK,OAAS,EAC3B,IAAb+O,GACFA,EAAW,GACXH,GAAoB,GACE,KAAbE,IACTA,EAAW,EACXD,GAAoB,GAEtB,IAAIG,EAAa,EACbC,EAAc,EACZC,EAAmB,GACnBC,EAA6B,GAC7BC,EAAoB,GACpBb,EAAU,GAChB9E,EAAKpI,MAAMkN,QAAQ9D,OAAO,SAAArD,GAAC,OACzBA,EAAElH,OAASwK,OAAOR,EAAMG,OAAOnK,OAC/BkH,EAAEpH,QAAU0K,OAAOR,EAAMG,OAAOrK,QAChCoH,EAAER,WAAa6C,EAAKpI,MAAMiN,kBACzBe,QAAQ,SAAA9C,GAAM,OAAIgC,EAAQhC,EAAOvL,UAAY,CAAEqE,GAAIkH,EAAOjF,IAAKkF,OAAQD,EAAOC,UAEjF/C,EAAKpI,MAAMqH,QAAQ2G,QAAQ,SAAA3N,GACrBA,EAAOkF,WAAa6C,EAAKpI,MAAMiN,iBAEJ5M,EAAOwF,aAAauD,OAAO,SAAA6E,GAAC,OACzDA,EAAEpP,OAASwK,OAAOR,EAAMG,OAAOnK,OAAUoP,EAAEtP,QAAU0K,OAAOR,EAAMG,OAAOrK,SACxEmH,KAAK,SAAC7D,EAAG8D,GAAJ,OAAWA,EAAEtH,IAAMwD,EAAExD,MACNuP,QAAQ,SAAAC,GAC7B,GAAe,YAAXA,EAAEzN,KAAoB,CACxB,GAAmB,gBAAfyN,EAAEtO,UAA6C,eAAfsO,EAAEtO,SACpC,OAEFgO,GAAcM,EAAExN,KAC4B,qBAAjCoN,EAAiBI,EAAEtO,WAC5BmO,EAA2BG,EAAEtO,UAAYoM,MAAMC,KAAK,CAACxK,OAAQ,IAAK,SAACyK,EAAGC,GAAJ,OAAU,IAC5E4B,EAA2BG,EAAEtO,UAAUsO,EAAExP,IAAM,IAAMwP,EAAExN,KACvDoN,EAAiBI,EAAEtO,UAAY,CAACsO,EAAExN,QAElCqN,EAA2BG,EAAEtO,UAAUsO,EAAExP,IAAM,IAAMwP,EAAExN,KACvDoN,EAAiBI,EAAEtO,UAAUoN,KAAKkB,EAAExN,WAEjC,CACL,GAAmB,kBAAfwN,EAAEtO,SAA8B,OACpCiO,GAAeK,EAAExN,KAC4B,qBAAlCsN,EAAkBE,EAAEtO,UAC7BoO,EAAkBE,EAAEtO,UAAY,CAACsO,EAAExN,MAEnCsN,EAAkBE,EAAEtO,UAAUoN,KAAKkB,EAAExN,WAK7C,IAAMyN,EAAUN,EAAcD,EACxBpE,EAAejD,EAAW8C,OAAO,SAAAI,GAAC,OAAIA,EAAEpK,QAAUgJ,EAAKpI,MAAMiN,kBAAiB,GAAGxN,KACjFgK,EAAcjK,EAAO4J,OAAO,SAAAM,GAAC,OAAIA,EAAEtK,QAAUiK,OAAOR,EAAMG,OAAOrK,SAAQ,GAAGc,KAE5E0O,EADkB,CAAC,mBAAoB,cAAe,aAAc,WAAY,kBAC/CrM,IAAI,SAAAnC,GACzC,IAAIyO,EAAgB,EAIpB,OAHIP,EAAiBlO,KACnByO,EAAgBP,EAAiBlO,GAAUuJ,OAAO,SAACjH,EAAG8D,GAAJ,OAAU9D,EAAI8D,GAAG,IAGrE/D,EAAAC,EAAAC,cAAA,OAAKH,IAAKpC,GACRqC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuB,UAAU,UACd1B,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAU2B,MAAO,CAAE+I,cAAe,IAChCrM,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuC,KAAK,SACV/E,KAIPqC,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAU2B,MAAO,CAAEgJ,WAAY,QAC7BtM,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuC,KAAK,SACV6E,EADH,IACkBxK,EAAcqP,OAIjClB,EAAQvN,IACTqC,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAU2B,MAAO,CAAEiJ,QAAS,IAC1BvM,EAAAC,EAAAC,cAACsM,EAAD,CACEnD,iBAAkBjD,EAAKgD,qBACvBzL,SAAUA,EACV4F,SAAU6C,EAAKpI,MAAMiN,gBACrBtO,MAAO0K,OAAOR,EAAMG,OAAOrK,OAC3BE,KAAMwK,OAAOR,EAAMG,OAAOnK,SAI9BqO,EAAQvN,IACRqC,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAU2B,MAAO,CAAEgJ,WAAY,IAC7BtM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ6E,UAAQ,EAAChE,QAAS,kBAAMoF,EAAKzC,iBAAiBuH,EAAQvN,GAAUqE,KAAKU,KAAK,QAAQd,KAAK,QAAQV,OAAK,EAACC,MAAM,QACnHnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ6E,UAAQ,EAACtC,KAAK,QAAQd,KAAK,SAASV,OAAK,EAACC,MAAM,YAK5DiL,EAAgB,GAAKlB,EAAQvN,IAC7BqC,EAAAC,EAAAC,cAACuM,GAAD,CACE5I,aAAciI,EAA2BnO,GACzCA,SAAUA,EACVuL,OAAQgC,EAAQvN,GAAUwL,OAC1BxM,MAAO0K,OAAOR,EAAMG,OAAOrK,SAG7BuO,EAAQvN,IACRqC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmD,MAAO,CAAEgH,UAAW,OAAQoC,aAAc,QAC1CC,UAAQ,EACRxL,MAAOyL,KAAKC,MAAsB,IAAhBT,EAAsBlB,EAAQvN,GAAUwL,SAAW,IAAM,MAAQ,QACnF2D,QAASF,KAAKC,MAAsB,IAAhBT,EAAsBlB,EAAQvN,GAAUwL,QAC5D4D,MAAK,GAAAtR,OAAKsB,EAAcmO,EAAQvN,GAAUwL,OAASiD,GAA9C,OAAA3Q,OAAkEsB,EAAcmO,EAAQvN,GAAUwL,YAGxG+B,EAAQvN,IAAaqC,EAAAC,EAAAC,cAAA,OAAKoD,MAAO,CAACoJ,aAAc,aAIvD,OACE1M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASwH,QAAM,GACb3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuC,KAAK,OAAOhB,UAAU,SAASP,MAAM,QAA7C,GAAA1F,OACMgM,EADN,MAAAhM,OACsBoL,EAAMG,OAAOnK,OAEnCmD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuB,UAAU,UACd1B,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAUkG,QAAS,GACjB7H,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEzB,GAA4B,aAAxBO,EAAMG,OAAO3I,OAAb,YAAA5C,OACUoL,EAAMG,OAAO3I,OADvB,KAAA5C,OACiC8P,EADjC,KAAA9P,OAC4CiQ,GAD5C,qBAAAjQ,OAEmB8P,EAFnB,KAAA9P,OAE8BiQ,IAGlC1L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEe,OAAK,EACLC,MAAM,SAFR,cAQJnB,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEzB,GAA4B,aAAxBO,EAAMG,OAAO3I,OAAb,YAAA5C,OACUoL,EAAMG,OAAO3I,OADvB,KAAA5C,OACiCoL,EAAMG,OAAOnK,KAD9C,KAAApB,OACsDoL,EAAMG,OAAOrK,OACrE,YAGFqD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6E,UAAQ,EACR7D,MAAM,SAFR,kBAQJnB,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEzB,GAA4B,MAAxBO,EAAMG,OAAO3I,OAAb,YAAA5C,OACUoL,EAAMG,OAAO3I,OADvB,KAAA5C,OACiC+P,EADjC,KAAA/P,OAC4CgQ,GAD5C,qBAAAhQ,OAEmB+P,EAFnB,KAAA/P,OAE8BgQ,IAGlCzL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEe,OAAK,EACLC,MAAM,SAFR,WASNnB,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAUkG,QAAS,GACjB7H,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,MAEA9H,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,OAAK,EAAC8D,UAAQ,EAACpD,MAAI,EACzBZ,QAAS,kBAAMoF,EAAKkF,mBAAmB,QAEvCtL,EAAAC,EAAAC,cAAA,KAAGoD,MAAO,CAAE0J,OAAQ,GAAKpI,UAAU,aAErC5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,OAAK,EAAC8D,UAAQ,EAACpD,MAAI,EACzBZ,QAAS,kBAAMoF,EAAKkF,mBAAmB,QAEvCtL,EAAAC,EAAAC,cAAA,KAAGoD,MAAO,CAAE0J,OAAQ,GAAKpI,UAAU,aAErC5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,OAAK,EAAC8D,UAAQ,EAACpD,MAAI,EACzBZ,QAAS,kBAAMoF,EAAKkF,mBAAmB,QAEvCtL,EAAAC,EAAAC,cAAA,KAAGoD,MAAO,CAAE0J,OAAQ,GAAKpI,UAAU,aAErC5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,OAAK,EAAC8D,UAAQ,EAACpD,MAAI,EACzBZ,QAAS,kBAAMoF,EAAKkF,mBAAmB,QAEvCtL,EAAAC,EAAAC,cAAA,KAAGoD,MAAO,CAAE0J,OAAQ,GAAKpI,UAAU,cAGvC5E,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,OAGF9H,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAUkG,QAAS,GACjB7H,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,SAAlB,iBAIF1B,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,OAAOP,MAAM,QAC5BoG,EADH,IACkBxK,EAAc6O,KAGlC5L,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,SAAlB,gBAIF1B,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,OAAOP,MAAM,OAC5BoG,EADH,IACkBxK,EAAc4O,MAIpC3L,EAAAC,EAAAC,cAACC,EAAA,EAAKwB,IAAN,CAAUkG,QAAS,GACjB7H,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,SAAlB,YAIF1B,EAAAC,EAAAC,cAACC,EAAA,EAAK2H,OAAN,KACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuB,UAAU,OAAOP,MAAO+K,EAAU,EAAI,MAAQ,SACnD3E,EADH,IACkBxK,EAAcmP,OAKrCC,MAKTnM,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOwB,OAAK,EACVvB,KAAK,WACLC,OAAQ,kBACN3G,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,GAAE,qBAAA7K,OAAuBiD,EAAY7B,KAAnC,KAAApB,OAA2CiD,EAAY/B,oBAxU9C0E,aCkBV4L,GApBH,kBACVjN,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,gBACb5E,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAMzB,GAAG,KACPtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQuC,KAAK,OAAOhB,UAAU,SAAS4B,MAAO,CAACgH,UAAW,SACxDtK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM5B,KAAK,UADb,cAIFyB,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,KAAK,UAAUwG,UAAYpE,IAClC9I,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,KAAK,UAAUwG,UAAY/E,IAClCnI,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,KAAK,WAAWwG,UAAY/H,IACnCnF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,KAAK,WAAWwG,UAAYlC,KACnChL,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOwB,OAAK,EAACvB,KAAK,IAAIC,OAAQ,kBAC5B3G,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,GAAG,kBCVL6G,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1G,MACvB,2DAsCN,SAAS2G,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT5R,KAAK,SAAAgS,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/P,QACf0P,UAAUC,cAAcO,WAK1B9R,QAAQ+R,IAAI,6CAKZ/R,QAAQ+R,IAAI,2CAMrBjS,MAAM,SAAAG,GACLD,QAAQC,MAAM,4CAA6CA,KCxEjE+R,IAASzH,OACP3G,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACErO,EAAAC,EAAAC,cAACoO,GAAD,OAEFC,SAASC,eAAe,SDSX,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,aAAwBrB,OAAOC,UAC3CqB,SAAWtB,OAAOC,SAASqB,OAIvC,OAGFtB,OAAOuB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAhS,OAAMiT,aAAN,sBAEPvB,IAiDV,SAAiCM,GAE/B/R,MAAM+R,GACH5R,KAAK,SAAAC,GAGkB,MAApBA,EAAS+S,SACuD,IAAhE/S,EAASH,QAAQmT,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMnT,KAAK,SAAAgS,GACjCA,EAAaoB,aAAapT,KAAK,WAC7BwR,OAAOC,SAAS4B,aAKpB1B,GAAgBC,KAGnBvR,MAAM,WACLE,QAAQ+R,IACN,mEArEAgB,CAAwB1B,GAIxBC,UAAUC,cAAcqB,MAAMnT,KAAK,WACjCO,QAAQ+R,IACN,+GAMJX,GAAgBC,MCpCxB2B","file":"static/js/main.40661b16.chunk.js","sourcesContent":["import numeral from 'numeral';\n\nexport function getTransactions(next) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/transactions?token=${token}`;\n  return fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  })\n    .then(response => response.json())\n    .then(next);\n}\n\nexport function deleteTransaction(data) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/transactions?token=${token}`;\n  return fetch(url, {\n    method: 'delete',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nfunction removeToken() {\n  localStorage.removeItem('wodeqian-token');\n}\n\nexport function isSignedIn() {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/isUserSignedIn?token=${token}`;\n  return fetch(url, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  }).then(res => res.json())\n    .catch(e => console.error(e))\n}\n\nexport function signIn(data, next) {\n  const url = 'https://tranquil-bastion-52140.herokuapp.com/api/users/signin';\n  return fetch(url, {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n    .then(next);\n}\n\nexport function signUp(data, next) {\n  const url = 'https://tranquil-bastion-52140.herokuapp.com/api/users/signup';\n  return fetch(url, {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n    .then(next);\n}\n\nexport function signOut() {\n  removeToken();\n}\n\nexport function createTransaction(data) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/transactions?token=${token}`;\n  return fetch(url, {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport function updateTransaction(data) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/transactions?token=${token}`;\n  return fetch(url, {\n    method: 'put',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport function createWallet(data) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/wallets?token=${token}`;\n  return fetch(url, {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport function createBudget(data) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/budgets?token=${token}`;\n  return fetch(url, {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport function deleteBudget(data) {\n  const token = localStorage.getItem('wodeqian-token');\n  const url = `https://tranquil-bastion-52140.herokuapp.com/api/budgets?token=${token}`;\n  return fetch(url, {\n    method: 'delete',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport function getCurrentDate() {\n  const today = new Date();\n  return {\n    day: today.getUTCDate(),\n    month: today.getUTCMonth() + 1,\n    year: today.getUTCFullYear()\n  };\n}\n\nexport function convertNumber(number) {\n  return numeral(number).format(0,0);\n}\n\nexport function convertToString(number) {\n  return numeral(number).value().toString();\n}","const years = [\n  {\n    text: '2020',\n    value: 2020,\n  },\n  {\n    text: '2019',\n    value: 2019,\n  },\n  {\n    text: '2018',\n    value: 2018,\n  },\n  {\n    text: '2017',\n    value: 2017,\n  },\n  {\n    text: '2016',\n    value: 2016,\n  }\n];\n\nexport default years;","const months = [\n  {\n    text: '1',\n    value: 1,\n    code: 'January'\n  },\n  {\n    text: '2',\n    value: 2,\n    code: 'February'\n  },\n  {\n    text: '3',\n    value: 3,\n    code: 'March'\n  },\n  {\n    text: '4',\n    value: 4,\n    code: 'April'\n  },\n  {\n    text: '5',\n    value: 5,\n    code: 'May'\n  },\n  {\n    text: '6',\n    value: 6,\n    code: 'June'\n  },\n  {\n    text: '7',\n    value: 7,\n    code: 'July'\n  },\n  {\n    text: '8',\n    value: 8,\n    code: 'August'\n  },\n  {\n    text: '9',\n    value: 9,\n    code: 'September'\n  },\n  {\n    text: '10',\n    value: 10,\n    code: 'October'\n  },\n  {\n    text: '11',\n    value: 11,\n    code: 'November'\n  },\n  {\n    text: '12',\n    value: 12,\n    code: 'December'\n  }\n];\n\nexport default months;","const days = [\n  {\n    text: '1',\n    value: 1,\n  },\n  {\n    text: '2',\n    value: 2,\n  },\n  {\n    text: '3',\n    value: 3,\n  },\n  {\n    text: '4',\n    value: 4,\n  },\n  {\n    text: '5',\n    value: 5,\n  },\n  {\n    text: '6',\n    value: 6,\n  },\n  {\n    text: '7',\n    value: 7,\n  },\n  {\n    text: '8',\n    value: 8,\n  },\n  {\n    text: '9',\n    value: 9,\n  },\n  {\n    text: '10',\n    value: 10,\n  },\n  {\n    text: '11',\n    value: 11,\n  },\n  {\n    text: '12',\n    value: 12,\n  },{\n    text: '13',\n    value: 13,\n  },\n  {\n    text: '14',\n    value: 14,\n  },\n  {\n    text: '15',\n    value: 15,\n  },\n  {\n    text: '16',\n    value: 16,\n  },\n  {\n    text: '17',\n    value: 17,\n  },\n  {\n    text: '18',\n    value: 18,\n  },\n  {\n    text: '19',\n    value: 19,\n  },\n  {\n    text: '20',\n    value: 20,\n  },\n  {\n    text: '21',\n    value: 21,\n  },\n  {\n    text: '22',\n    value: 22,\n  },\n  {\n    text: '23',\n    value: 23,\n  },\n  {\n    text: '24',\n    value: 24,\n  },\n  {\n    text: '25',\n    value: 25,\n  },{\n    text: '26',\n    value: 26,\n  },\n  {\n    text: '27',\n    value: 27,\n  },\n  {\n    text: '28',\n    value: 28,\n  },\n  {\n    text: '29',\n    value: 29,\n  },\n  {\n    text: '30',\n    value: 30,\n  },\n  {\n    text: '31',\n    value: 31,\n  }\n];\n\nexport default days;","const category = {\n  'Outcome': [\n    {\n      text: 'Convenient Store',\n      value: 'Convenient Store'\n    },\n    {\n      text: 'Supermarket',\n      value: 'Supermarket'\n    },\n    {\n      text: 'Shopping',\n      value: 'Shopping'\n    },\n    {\n      text: 'Laundry',\n      value: 'Laundry'\n    },\n    {\n      text: 'Commuter Pass',\n      value: 'Commuter Pass'\n    },\n    {\n      text: 'Transportation',\n      value: 'Transportation'\n    },\n    {\n      text: 'Eating Out',\n      value: 'Eating Out'\n    },\n    {\n      text: 'Beverage',\n      value: 'Beverage'\n    },\n    {\n      text: 'Outdoor/Social',\n      value: 'Outdoor/Social'\n    },\n    {\n      text: 'Travel',\n      value: 'Travel'\n    },\n    {\n      text: 'Family',\n      value: 'Family'\n    },\n    {\n      text: 'House Rent',\n      value: 'House Rent'\n    },\n    {\n      text: 'Electric Bill',\n      value: 'Electric Bill'\n    },\n    {\n      text: 'Television Bill',\n      value: 'Television Bill'\n    },\n    {\n      text: 'Gas Bill',\n      value: 'Gas Bill'\n    },\n    {\n      text: 'Water Bill',\n      value: 'Water Bill'\n    },\n    {\n      text: 'Internet Bill',\n      value: 'Internet Bill'\n    },\n    {\n      text: 'Phone Bill',\n      value: 'Phone Bill'\n    },\n    {\n      text: 'Web Service',\n      value: 'Web Service'\n    },\n    {\n      text: 'Public Service',\n      value: 'Public Service'\n    },\n    {\n      text: 'Air Ticket',\n      value: 'Air Ticket'\n    },\n    {\n      text: 'Education',\n      value: 'Education'\n    },\n    {\n      text: 'Investment',\n      value: 'Investment'\n    },\n    {\n      text: 'Allowance',\n      value: 'Allowance'\n    },\n    {\n      text: 'Transfer To',\n      value: 'Transfer To'\n    },\n    {\n      text: 'Debt Pay',\n      value: 'Debt Pay'\n    },\n    {\n      text: 'Others',\n      value: 'Others'\n    }\n  ],\n  'Income': [\n    {\n      text: 'Salary',\n      value: 'Salary'\n    },\n    {\n      text: 'Freelance',\n      value: 'Freelance'\n    },\n    {\n      text: 'Company Payback',\n      value: 'Company Payback'\n    },\n    {\n      text: 'Payback from Thao',\n      value: 'Payback from Thao'\n    },\n    {\n      text: 'Transfer From',\n      value: 'Transfer From'\n    },\n    {\n      text: 'Borrow',\n      value: 'Borrow'\n    }\n  ]\n};\nexport default category;","const types = [\n  {\n    text: 'Income',\n    value: 'Income'\n  },\n  {\n    text: 'Outcome',\n    value: 'Outcome'\n  },\n];\n\nexport default types;","import React, { Component } from 'react';\nimport { Form, Button, Input, Dropdown, Message } from 'semantic-ui-react';\nimport validator from 'validator';\nimport PropTypes from 'prop-types';\nimport years from '../common/years';\nimport months from '../common/months';\nimport days from '../common/days';\nimport category from '../common/category';\nimport types from '../common/types';\nimport { convertNumber, convertToString } from '../utils/helper';\n\nclass AddTransactionForm extends Component {\n  state = {\n    transaction: {\n      walletId: this.props.walletId,\n      wallet: this.props.walletName,\n      name: '',\n      type: null,\n      category: null,\n      cost: '',\n      year: this.props.currentDate.year,\n      month: this.props.currentDate.month,\n      day: this.props.currentDate.day\n    },\n    errors: {}\n  };\n  \n  handleInputChange = (event, data) => {\n    this.setState({\n      transaction: { ...this.state.transaction, [data.name]: data.name === 'cost' ? convertToString(data.value) : data.value }\n    });\n  }\n  \n  validate = (data) => {\n    const errors = {};\n    if (!validator.isNumeric(data.cost)) {\n      errors.cost = 'Cost must contain only number';\n    }\n    if (!data.name) {\n      errors.name = `Name can't be empty`;\n    }\n    if (!data.type) {\n      errors.type = `Type can't be empty`;\n    }\n    if (!data.category) {\n      errors.category = `Category can't be empty`;\n    }\n    if (!data.year) {\n      errors.year = `Year can't be empty`;\n    }\n    if (!data.month) {\n      errors.month = `Month can't be empty`;\n    }\n    if (!data.day) {\n      errors.day = `Day can't be empty`;\n    }\n    return errors;\n  }\n  \n  handleAddTransactionClick = () => {\n    const errors = this.validate(this.state.transaction);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.props.onAddTransactionClick(this.state.transaction);\n    }\n  }\n  \n  render() {\n    const isCategoryDisabled = !this.state.transaction.type;\n    const categoryOptions = this.state.transaction.type ? category[this.state.transaction.type] : null;\n    const errors = this.state.errors;\n    const keys = Object.keys(errors);\n    const errorMessages = keys.map(key => (\n      <Message\n        key={key}\n        error\n        header={key}\n        content={errors[key]}\n      />\n    ));\n    return (\n      <Form error={errorMessages.length !== 0}>\n        {errorMessages}\n        <Form.Group widths='equal'>\n          <Form.Field>\n            <Dropdown\n              placeholder='Wallet'\n              value={this.state.transaction.wallet}\n              onChange={this.handleInputChange}\n              selection\n              fluid\n              options={this.props.walletNames}\n              name='wallet'\n            />\n          </Form.Field>\n          \n          <Form.Field>\n            <Input\n              placeholder='Name'\n              value={this.state.transaction.name}\n              onChange={this.handleInputChange}\n              fluid\n              name='name'\n            />\n          </Form.Field>\n          \n          <Form.Field>\n            <Dropdown\n              placeholder='Type'\n              value={this.state.transaction.type}\n              onChange={this.handleInputChange}\n              selection\n              fluid\n              options={types}\n              name='type'\n            />\n          </Form.Field>\n          \n          <Form.Field>\n            <Dropdown\n              disabled={isCategoryDisabled}\n              placeholder='Category'\n              value={this.state.transaction.category}\n              onChange={this.handleInputChange}\n              selection\n              fluid\n              options={categoryOptions}\n              name='category'\n            />\n          </Form.Field>\n          \n          <Form.Field>\n            <Input\n              placeholder='Cost'\n              value={this.state.transaction.cost === '' ? this.state.transaction.cost : convertNumber(this.state.transaction.cost)}\n              onChange={this.handleInputChange}\n              fluid\n              name='cost'\n            />\n          </Form.Field>\n        </Form.Group>\n        \n        <Form.Group widths='equal'>\n          <Form.Field>\n            <Dropdown\n              value={this.state.transaction.year}\n              onChange={this.handleInputChange}\n              selection\n              fluid\n              options={years}\n              name='year'\n            />\n          </Form.Field>\n          \n          <Form.Field>\n            <Dropdown\n              placeholder='Month'\n              value={this.state.transaction.month}\n              onChange={this.handleInputChange}\n              selection\n              fluid\n              options={months}\n              name='month'\n            />\n          </Form.Field>\n          \n          <Form.Field>\n            <Dropdown\n              placeholder='Day'\n              value={this.state.transaction.day}\n              onChange={this.handleInputChange}\n              selection\n              fluid\n              options={days}\n              name='day'\n            />\n          </Form.Field>\n        </Form.Group>\n        \n        <Form.Group  widths='equal'>\n          <Form.Field>\n            <Button\n              onClick={this.handleAddTransactionClick}\n              attached='bottom'\n              basic\n              color='green'\n            >\n              Add\n            </Button>\n          </Form.Field>\n          \n          <Form.Field>\n            <Button\n              attached='bottom'\n              basic\n              color='red'\n              onClick={this.props.onCancelClick}\n            >\n              Cancel\n            </Button>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nAddTransactionForm.propTypes = {\n  walletId: PropTypes.string.isRequired,\n  walletName: PropTypes.string.isRequired,\n  walletNames: PropTypes.array.isRequired,\n  currentDate: PropTypes.object.isRequired,\n  onAddTransactionClick: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n}\n\nexport default AddTransactionForm;","import React, { Component } from 'react';\nimport { Button, Grid } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport AddTransactionForm from '../forms/AddTransactionForm';\n\nclass AddTransactionPanel extends Component {\n  state = {\n    displayAddButton: true\n  };\n  \n  handleAddButtonClick = () => this.setState({\n    displayAddButton: false\n  });\n  \n  handleCancelButtonClick = () => this.setState({\n    displayAddButton: true\n  });\n  \n  handleAddTransactionClick = (transaction) => {\n    this.props.onAddTransactionClick(transaction);\n    this.setState({ displayAddButton: true });\n  }\n  \n  render() {\n    if (this.state.displayAddButton) {\n      return (\n        <Grid textAlign='center'>\n        <Grid.Row>\n        <Button\n          icon='plus'\n          color='green'\n          onClick={this.handleAddButtonClick}\n        />\n        </Grid.Row>\n        </Grid>\n      );\n    }\n    return (\n      <AddTransactionForm\n        walletId={this.props.walletId}\n        walletNames={this.props.walletNames}\n        walletName={this.props.walletName}\n        currentDate={this.props.currentDate}\n        onCancelClick={this.handleCancelButtonClick}\n        onAddTransactionClick={this.handleAddTransactionClick}\n      />\n    );\n  }\n}\n\nAddTransactionPanel.propTypes = {\n  walletId: PropTypes.string.isRequired,\n  walletName: PropTypes.string.isRequired,\n  walletNames: PropTypes.array.isRequired,\n  currentDate: PropTypes.object.isRequired,\n  onAddTransactionClick: PropTypes.func.isRequired\n}\n\nexport default AddTransactionPanel;","import React, { Component } from 'react';\nimport { Button, Header, Icon, Modal, Form, Input, Dropdown, Message } from 'semantic-ui-react';\nimport validator from 'validator';\nimport PropTypes from 'prop-types';\nimport years from '../common/years';\nimport months from '../common/months';\nimport days from '../common/days';\nimport category from '../common/category';\nimport types from '../common/types';\nimport { convertNumber, convertToString } from '../utils/helper';\n\nclass UpdateTransactionForm extends Component {\n  state = { \n    modalOpen: false,\n    transaction: {\n      id: this.props.id,\n      name: this.props.name,\n      type: this.props.type,\n      category: this.props.category,\n      cost: String(this.props.cost),\n      year: this.props.year,\n      month: this.props.month,\n      day: this.props.day\n    },\n    errors: {}\n  };\n\n  handleOpenClick = () => this.setState({ modalOpen: true });\n\n  handleCloseClick = () => this.setState({ modalOpen: false });\n  \n  validate = (transaction) => {\n    const errors = {};\n    if (!validator.isNumeric(transaction.cost)) {\n      errors.cost = 'Cost must contain only number';\n    }\n    if (!transaction.name) {\n      errors.name = `Name can't be empty`;\n    }\n    if (!transaction.type) {\n      errors.type = `Type can't be empty`;\n    }\n    if (!transaction.category) {\n      errors.category = `Category can't be empty`;\n    }\n    if (!transaction.year) {\n      errors.year = `Year can't be empty`;\n    }\n    if (!transaction.month) {\n      errors.month = `Month can't be empty`;\n    }\n    if (!transaction.day) {\n      errors.day = `Day can't be empty`;\n    }\n    return errors;\n  }\n  \n  handleUpdateTransactionClick = () => {\n    const errors = this.validate(this.state.transaction);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.setState({ modalOpen: false })\n      this.props.onUpdateTransactionClick(this.state.transaction);\n    }\n  }\n  \n  handleInputChange = (event, data) => this.setState({\n    transaction: { ...this.state.transaction, [data.name]: data.name === 'cost' ? convertToString(data.value) : data.value }\n  });\n\n  render() {\n    const errors = this.state.errors;\n    const keys = Object.keys(errors);\n    const errorMessages = keys.map(key => (\n      <Message\n        key={key}\n        error\n        header={key}\n        content={errors[key]}\n      />\n    ));\n    const categoryOptions = this.state.transaction.type ? category[this.state.transaction.type] : null;\n    return (\n      <Modal\n        trigger={<Button icon='pencil' color='green' basic onClick={this.handleOpenClick} />}\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n        basic\n        size='small'\n      >\n        <Header icon='pencil' content='Update transaction' />\n        <Modal.Content>\n          <Form error={errorMessages.length !== 0}>\n            {errorMessages}\n\n            <Form.Field>\n              <Input\n                value={this.state.transaction.name}\n                onChange={this.handleInputChange}\n                fluid\n                name='name'\n              />\n            </Form.Field>\n            \n            <Form.Field>\n              <Dropdown\n                placeholder='Type'\n                value={this.state.transaction.type}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={types}\n                name='type'\n              />\n            </Form.Field>\n            \n            <Form.Field>\n              <Dropdown\n                disabled={!categoryOptions}\n                placeholder='Category'\n                value={this.state.transaction.category}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={categoryOptions}\n                name='category'\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Input\n                placeholder='Cost'\n                value={convertNumber(this.state.transaction.cost)}\n                onChange={this.handleInputChange}\n                fluid\n                name='cost'\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Dropdown\n                placeholder='Year'\n                value={this.state.transaction.year}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={years}\n                name='year'\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Dropdown\n                placeholder='Month'\n                value={this.state.transaction.month}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={months}\n                name='month'\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Dropdown\n                placeholder='Day'\n                value={this.state.transaction.day}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={days}\n                name='day'\n              />\n            </Form.Field>\n            \n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.handleUpdateTransactionClick} inverted>\n            <Icon name='check' /> Update\n          </Button>\n          <Button color='red' onClick={this.handleCloseClick} inverted>\n            <Icon name='close' /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nUpdateTransactionForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  cost: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  day: PropTypes.number.isRequired,\n  onUpdateTransactionClick: PropTypes.func.isRequired\n}\n\nexport default UpdateTransactionForm;","import React, { Component } from 'react';\nimport { Modal, Icon, Header, Button, List } from 'semantic-ui-react';\nimport { convertNumber } from '../utils/helper';\n\nclass DeleteDialogConfirm extends Component {\n  state = {\n    modalOpen: false,\n    transaction_id: this.props.id,\n    name: this.props.name,\n    type: this.props.type,\n    category: this.props.category,\n    cost: this.props.cost,\n    year: this.props.year,\n    month: this.props.month,\n    day: this.props.day\n  };\n\n  handleConfirmClick = () => {\n    this.props.onTrashClick(this.state.transaction_id);\n    this.setState({ modalOpen: false });\n  };\n\n  handleOpenClick = () => this.setState({ modalOpen: true });\n\n  handleCloseClick = () => this.setState({ modalOpen: false });\n\n  render() {\n    return (\n      <Modal\n        trigger={<Button icon='trash' basic color='red' onClick={this.handleOpenClick} />}\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n        basic\n        size='small'\n      >\n        <Header icon='trash' content='Delete Transaction' />\n        <Modal.Content>\n          Are you sure to delete the transaction below:\n          <List bulleted>\n            <List.Item>\n              Name: {this.state.name}\n            </List.Item>\n            <List.Item>\n              Type: {this.state.type}\n            </List.Item>\n            <List.Item>\n              Category: {this.state.category}\n            </List.Item>\n            <List.Item>\n              Cost: {convertNumber(this.state.cost)}\n            </List.Item>\n            <List.Item>\n              Made on: {this.state.year}/{this.state.month}/{this.state.day}\n            </List.Item>\n          </List>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.handleConfirmClick} inverted>\n            <Icon name='check' /> Confirm\n          </Button>\n          <Button color='red' onClick={this.handleCloseClick} inverted>\n            <Icon name='close' /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default DeleteDialogConfirm;","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport UpdateTransactionForm from '../forms/UpdateTransactionForm';\nimport DeleteConfirmDialog from './DeleteConfirmDialog';\nimport { convertNumber } from '../utils/helper';\n\nconst TransactionDisplay = (props) => {\n  const color = props.type === 'Income' ? 'steelblue' : 'red';\n  return (\n    <Table.Row>\n      <Table.Cell>{props.name}</Table.Cell>\n      <Table.Cell>{props.category}</Table.Cell>\n      <Table.Cell style={{'color': color}}>{`${props.currency} ${convertNumber(props.cost)}`}</Table.Cell>\n      <Table.Cell>{`${props.year}/${props.month}/${props.day}`}</Table.Cell>\n      <Table.Cell>\n        <DeleteConfirmDialog\n          id={props.id}\n          name={props.name}\n          type={props.type}\n          category={props.category}\n          cost={props.cost}\n          year={props.year}\n          month={props.month}\n          day={props.day}\n          onTrashClick={props.onTrashClick}\n        />\n        <UpdateTransactionForm\n          id={props.id}\n          name={props.name}\n          type={props.type}\n          category={props.category}\n          cost={props.cost}\n          year={props.year}\n          month={props.month}\n          day={props.day}\n          onUpdateTransactionClick={props.onUpdateTransactionClick}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nTransactionDisplay.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  cost: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  day: PropTypes.number.isRequired,\n  onTrashClick: PropTypes.func.isRequired,\n  onUpdateTransactionClick: PropTypes.func.isRequired\n}\n\nexport default TransactionDisplay;","import React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport TransactionDisplay from './TransactionDisplay';\n\nclass Wallet extends Component {\n  handleTrashClick = (id) => {\n    const transaction = {\n      walletId: this.props.walletId,\n      wallet: this.props.walletName,\n      id\n    };\n    this.props.onTrashClick(transaction);\n  }\n  render() {\n    const transactions = this.props.transactions.sort((a, b) => (b.day - a.day)).map(transaction => (\n      <TransactionDisplay\n        key={transaction._id}\n        id={transaction._id}\n        name={transaction.name}\n        type={transaction.type}\n        category={transaction.category}\n        year={transaction.year}\n        month={transaction.month}\n        day={transaction.day}\n        cost={transaction.cost}\n        currency={this.props.currency}\n        onTrashClick={() => this.handleTrashClick(transaction._id)}\n        onUpdateTransactionClick={this.props.onUpdateTransactionClick}\n      />\n    ));\n  \n    return (\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Category</Table.HeaderCell>\n            <Table.HeaderCell>Cost</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {transactions}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nWallet.propTypes = {\n  walletId: PropTypes.string.isRequired,\n  walletName: PropTypes.string.isRequired,\n  onTrashClick: PropTypes.func.isRequired,\n  transactions: PropTypes.array.isRequired,\n  currency: PropTypes.string.isRequired,\n  onUpdateTransactionClick: PropTypes.func.isRequired\n}\n\nexport default Wallet;","const currencies = [\n  {\n    text: 'Taiwan Dollar',\n    value: 'tw',\n    code: 'NT$'\n  },\n  {\n    text: 'Japanese Yen',\n    value: 'jp',\n    code: 'JP¥'\n  },\n  {\n    text: 'Vietnamese Dong',\n    value: 'vn',\n    code: 'VND'\n  },\n  {\n    text: 'US Dollar',\n    value: 'us',\n    code: 'US$'\n  }\n];\n\nexport default currencies;","import React, { Component } from 'react';\nimport { Button, Header, Icon, Modal, Form, Input, Dropdown, Message } from 'semantic-ui-react';\nimport isNumeric from 'validator/lib/isNumeric';\nimport PropTypes from 'prop-types';\nimport currencies from '../common/currencies';\nimport { convertNumber, convertToString } from '../utils/helper';\n\nclass AddWalletForm extends Component {\n  state = { \n    modalOpen: false,\n    wallet: {\n      name: '',\n      currency: '',\n      initBalance: ''\n    },\n    errors: {}\n  };\n\n  handleOpenClick = () => this.setState({ modalOpen: true });\n\n  handleCloseClick = () => this.setState({ modalOpen: false });\n  \n  validate = (wallet) => {\n    const errors = {};\n    if (!wallet.name) {\n      errors.name = `Name can't be empty`;\n    }\n    if (!wallet.currency) {\n      errors.currency = `Currency can't be empty`;\n    }\n    \n    if (!isNumeric(wallet.initBalance)) {\n      errors.initBalance = `Initial Balance must be a valid number`;\n    }\n    return errors;\n  }\n  \n  handleAddWalletClick = () => {\n    const errors = this.validate(this.state.wallet);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.props.onAddWalletClick(this.state.wallet);\n      this.setState({\n        modalOpen: false,\n        wallet: {\n          name: '',\n          currency: '',\n          initBalance: ''\n        }\n      });\n    }\n  }\n  \n  handleInputChange = (event, data) => this.setState({\n    wallet: { ...this.state.wallet, [data.name]: data.name === 'initBalance' ? convertToString(data.value) : data.value }\n  });\n\n  render() {\n    const errors = this.state.errors;\n    const keys = Object.keys(errors);\n    const errorMessages = keys.map(key => (\n      <Message\n        key={key}\n        error\n        header={key}\n        content={errors[key]}\n      />\n    ));\n    return (\n      <Modal\n        trigger={<Button icon='plus' fluid color='red' onClick={this.handleOpenClick} />}\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n        basic\n        size='small'\n      >\n        <Header icon='suitcase' content='Add Wallet' />\n        <Modal.Content>\n          <Form error={errorMessages.length !== 0}>\n            {errorMessages}\n            <Form.Field>\n              <Input\n                value={this.state.wallet.name}\n                onChange={this.handleInputChange}\n                placeholder='Name'\n                fluid\n                name='name'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                placeholder='Currency'\n                value={this.state.wallet.currency}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={currencies}\n                name='currency'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                value={this.state.wallet.initBalance === '' ? this.state.wallet.initBalance : convertNumber(this.state.wallet.initBalance)}\n                onChange={this.handleInputChange}\n                placeholder='Init Balance'\n                fluid\n                name='initBalance'\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.handleAddWalletClick} inverted>\n            <Icon name='plus' /> Add\n          </Button>\n          <Button color='red' onClick={this.handleCloseClick} inverted>\n            <Icon name='close' /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nAddWalletForm.propTypes = {\n  onAddWalletClick: PropTypes.func.isRequired\n}\n\nexport default AddWalletForm;","import React from 'react';\nimport { Button, Loader } from 'semantic-ui-react';\nimport AddWalletForm from '../forms/AddWalletForm';\n\nconst WalletMenu = (props) => (\n  <div>\n    <div className='ui tabular top attached stackable menu'>\n      <div className='header item'>\n        {props.nickname || ''}\n      </div>\n      {props.walletBar || ''}\n      <div className='item'>\n        <AddWalletForm\n          onAddWalletClick={props.onAddWalletClick}\n        />\n      </div>\n      <div className='item'>\n        <Button\n          circular\n          color='grey'\n          fluid\n          onClick={props.onSignOutClick}\n        >\n          SignOut\n        </Button>\n      </div>\n    </div>\n    { !props.nickname && <Loader active />  }\n  </div>\n);\n\nexport default WalletMenu;","import React, { Component } from 'react';\nimport { Route, NavLink, Link, Redirect } from 'react-router-dom';\nimport { Button, Segment, Header, Grid } from 'semantic-ui-react';\nimport { getTransactions, createTransaction, updateTransaction, createWallet, isSignedIn, getCurrentDate, deleteTransaction, convertNumber } from '../utils/helper';\nimport AddTransactionPanel from '../components/AddTransactionPanel';\nimport Wallet from '../components/Wallet';\nimport WalletMenu from '../components/WalletMenu';\nimport currencies from '../common/currencies';\nimport months from '../common/months';\n\nclass WalletPage extends Component {\n  state = {\n    redirectSignIn: false,\n    wallets: [],\n    nickname: ''\n  }\n  \n  UNSAFE_componentWillMount() {\n    if (!localStorage.getItem('wodeqian-token')) {\n      this.setState({ redirectSignIn: true });\n    }\n  }\n  \n  componentDidMount() {\n    isSignedIn().then(res => {\n      if (res.error) {\n        localStorage.removeItem('wodeqian-token');\n        if (!this.state.redirectSignIn) {\n          this.setState({ redirectSignIn: true });\n        }\n        throw new Error('Token is not valid');\n      } else {\n        this.setState({ nickname: res.nickname });\n      }\n    })\n      .then(() => this.setTransactions())\n      .catch(e => console.error(e));\n  }\n  \n  setTransactions = () => {\n    getTransactions(data => {\n      this.setState({ wallets: data.wallets });\n    });\n  }\n  \n  handleAddWalletClick = (wallet) => {\n    createWallet(wallet)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ redirectSignIn: true });\n          throw new Error('Response Error');\n        }\n      })\n      .then(() => this.setTransactions())\n      .then(() => this.forceUpdate())\n      .catch((e) => console.error(e));\n  }\n\n  handleAddTransactionClick = (transaction) => {\n    createTransaction(transaction)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ redirectSignIn: true });\n          throw new Error('Response Error');\n        }\n      })\n      .then(() => this.setTransactions())\n      .then(() => this.forceUpdate())\n      .catch((e) => console.error(e));\n  }\n\n  handleUpdateTransactionClick = (transaction) => {\n    updateTransaction(transaction)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ redirectSignIn: true });\n          throw new Error('Response Error');\n        }\n      })\n      .then(() => this.setTransactions())\n      .then(() => this.forceUpdate())\n      .catch((e) => console.error(e));\n  }\n  \n  handleTrashClick = (transaction) => {\n    deleteTransaction(transaction)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ redirectSignIn: true });\n          throw new Error('Response Error');\n        }\n      })\n      .then(() => this.setTransactions())\n      .then(() => this.forceUpdate());\n  }\n  \n  handleSignOutClick = () => {\n    localStorage.removeItem('wodeqian-token');\n    if (!this.state.redirectSignIn) {\n      this.setState({ redirectSignIn: true });\n    }\n    this.forceUpdate();\n  }\n  \n  render() {\n    if (this.state.redirectSignIn) {\n      return (\n        <Redirect\n          to='/signin'\n        />\n      );\n    }\n    const currentDate = getCurrentDate();\n    if (this.state.wallets.length > 0) {\n      const walletBar = this.state.wallets.map(wallet => (\n        <NavLink\n          className='item'\n          key={wallet._id}\n          to={`/wallets/${wallet._id}`}\n        >\n          <i className={`${wallet.currency} flag`} />{wallet.name}\n        </NavLink>\n      ));\n      return (\n        <div>\n          <WalletMenu\n            walletBar={walletBar}\n            onAddWalletClick={this.handleAddWalletClick}\n            nickname={this.state.nickname}\n            onSignOutClick={this.handleSignOutClick}\n          />\n          \n          <Route\n            path='/wallets/:walletId/:year/:month'\n            render={({ match }) => {\n              const wallet = this.state.wallets.find(w => (\n                w._id === match.params.walletId\n              ));\n              const costs = wallet.transactions.map(transaction => {\n                if (transaction.type === 'Income') {\n                  return 0 - transaction.cost;\n                }\n                return transaction.cost;\n              });\n              const totalConsumption = costs.reduce((a, b) => a + b, 0);\n\n              const currentMonthTransactions = wallet.transactions.filter(transaction => (\n                transaction.month === Number(match.params.month) && transaction.year === Number(match.params.year)\n              ));\n              const thisMonthCosts = currentMonthTransactions.map(transaction => {\n                if (transaction.type === 'Income' || transaction.category === 'Transfer To') {\n                  return 0;\n                }\n                return transaction.cost;\n              });\n              const thisMonthConsumtion = thisMonthCosts.reduce((a, b) => a + b, 0);\n              const walletNames = this.state.wallets.map(w => (\n                {\n                  text: w.name,\n                  value: w.name\n                }\n              ));\n              const currencyCode = currencies.filter(c => c.value === wallet.currency)[0].code;\n              const monthString = months.filter(m => m.value === Number(match.params.month))[0].code;\n              return (\n              <Segment raised>\n                <AddTransactionPanel\n                  walletNames={walletNames}\n                  walletId={wallet._id}\n                  walletName={wallet.name}\n                  onAddTransactionClick={this.handleAddTransactionClick}\n                  currentDate={currentDate}\n                />\n\n                <Header size='huge' textAlign='center' color='blue'>\n                  {`${monthString}, ${match.params.year}`}\n                </Header>\n                <Header textAlign='center' color='red' >\n                  Consumption: {currencyCode} {convertNumber(thisMonthConsumtion)}\n                </Header>\n                <Header textAlign='center' color='green' >\n                  Current Balance: {currencyCode} {convertNumber(wallet.initBalance - totalConsumption)}\n                </Header>\n\n                <Grid textAlign='center' columns={3}>\n                  <Grid.Row columns={3}>\n                    <Grid.Column>\n                      <Link\n                        to={ Number(match.params.month) > 1 ?\n                          `/wallets/${wallet._id}/${match.params.year}/${Number(match.params.month) - 1}` :\n                          `/wallets/${wallet._id}/${Number(match.params.year) - 1}/12`\n                        }\n                      >\n                        <Button\n                          basic\n                          color='blue'\n                        >\n                          Previous\n                        </Button>\n                      </Link>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Link\n                        to={`/reports/${wallet._id}/${match.params.year}/${match.params.month}`}\n                      >\n                        <Button\n                          circular\n                          color='blue'\n                        >\n                          Report\n                        </Button>\n                      </Link>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Link\n                        to={ Number(match.params.month) < 12 ?\n                          `/wallets/${wallet._id}/${match.params.year}/${Number(match.params.month) + 1}` :\n                          `/wallets/${wallet._id}/${Number(match.params.year) + 1}/1`\n                        }\n                      >\n                        <Button\n                          basic\n                          color='blue'\n                        >\n                          Next\n                        </Button>\n                      </Link>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n\n                <Wallet\n                  transactions={currentMonthTransactions}\n                  currency={currencyCode}\n                  walletName={wallet.name}\n                  walletNames={walletNames}\n                  walletId={wallet._id}\n                  onTrashClick={this.handleTrashClick}\n                  onUpdateTransactionClick={this.handleUpdateTransactionClick}\n                />\n              </Segment>\n              );\n            }}\n          />\n          <Route exact\n            path='/wallets/:walletId/'\n            render={({ match }) => (\n              <Redirect\n                to={`/wallets/${match.params.walletId}/${currentDate.year}/${currentDate.month}`}\n              />\n            )}\n          />\n        </div>\n      );\n    }\n    return (\n      <WalletMenu\n        onAddWalletClick={this.handleAddWalletClick}\n        onSignOutClick={this.handleSignOutClick}\n      />\n    );\n  }\n}\n\nexport default WalletPage;","import React, { Component } from 'react';\nimport { Button, Form, Header, Input, Message, Segment } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../utils/helper';\n\nclass SignUp extends Component {\n  state = {\n    isSignedUp: false,\n    user: {\n      username: '',\n      nickname: '',\n      password: ''\n    },\n    errors: {}\n  };\n  \n  handleInputChange = (event) => {\n    this.setState({\n      user: { ...this.state.user, [event.target.name]: event.target.value }\n    });\n  }\n  \n  validate = (user) => {\n    const errors = {};\n    if (!user.username) {\n      errors.username = `Username can't be empty`;\n    }\n    if (!user.nickname) {\n      errors.nickname = `Nickname can't be empty`;\n    }\n    if (!user.password) {\n      errors.password = `Password can't be empty`;\n    }\n    return errors;\n  }\n  \n  handleSignUpClick = () => {\n    const errors = this.validate(this.state.user);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      signUp(this.state.user, res => {\n        if (res.error) {\n          const serverErrors = {server: res.message};\n          this.setState({ errors: serverErrors });\n        } else {\n          localStorage.setItem('wodeqian-token', res.token);\n          this.setState({ isSignedUp: true });\n        }\n      });\n    }\n  }\n  \n  render() {\n    const errors = this.state.errors;\n    const keys = Object.keys(errors);\n    const errorMessages = keys.map(key => (\n      <Message\n        error\n        header={key}\n        content={errors[key]}\n      />\n    ));\n    if (!this.state.isSignedUp) {\n      return (\n        <Segment raised>\n          <Header>\n            SignUp Form\n          </Header>\n          <Form error={errorMessages.length !== 0}>\n          {errorMessages}\n            <Form.Field>\n              <Input\n                placeholder='Your Want To Be Called?'\n                value={this.state.user.nickname}\n                name='nickname'\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                placeholder='Username'\n                value={this.state.user.username}\n                name='username'\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                placeholder='Password'\n                value={this.state.user.password}\n                name='password'\n                onChange={this.handleInputChange}\n                type='password'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button\n                fluid\n                basic\n                color='green'\n                onClick={this.handleSignUpClick}\n              >\n                SignUp\n              </Button>\n            </Form.Field>\n          </Form>\n        </Segment>\n      );\n    }\n    return <Redirect to='/wallets' />;\n  }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport { Button, Form, Header, Input, Message, Segment } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { signIn, isSignedIn } from '../utils/helper';\n\nclass SignIn extends Component {\n  state = {\n    isSignedIn: false,\n    needSignUp: false,\n    user: {\n      username: '',\n      password: ''\n    },\n    errors: {}\n  };\n  \n  UNSAFE_componentWillMount() {\n    if (!localStorage.getItem('wodeqian-token')) {\n      this.setState({ isSignedIn: false });    }\n  }\n  \n  componentDidMount() {\n    isSignedIn().then(res => {\n      if (!res.error) {\n        this.setState({ isSignedIn: true });\n      }\n    });\n  }\n  \n  handleInputChange = (event) => {\n    this.setState({\n      user: { ...this.state.user, [event.target.name]: event.target.value }\n    });\n  }\n  \n  validate = (user) => {\n    const errors = {};\n    if (!user.username) {\n      errors.username = `Username can't be empty`;\n    }\n    if (!user.password) {\n      errors.password = `Password can't be empty`;\n    }\n    return errors;\n  }\n  \n  handleSignInClick = () => {\n    const errors = this.validate(this.state.user);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      signIn(this.state.user, res => {\n        if (res.error) {\n          const serverErrors = {server: res.message};\n          this.setState({ errors: serverErrors });\n        } else {\n          localStorage.setItem('wodeqian-token', res.token);\n          this.setState({ isSignedIn: true });\n        }\n      });\n    }\n  }\n  \n  handleSignUpClick = () => {\n    this.setState({ needSignUp: true });\n  }\n  \n  render() {\n    const errors = this.state.errors;\n    const keys = Object.keys(errors);\n    const errorMessages = keys.map(key => (\n      <Message\n        error\n        header={key}\n        content={errors[key]}\n      />\n    ));\n    if (this.state.needSignUp) {\n      return <Redirect to='/signup' />;\n    }\n    \n    if (!this.state.isSignedIn) {\n      return (\n        <Segment raised>\n          <Header>\n            SignIn Form\n          </Header>\n          <Form error={errorMessages.length !== 0}>\n            {errorMessages}\n            <Form.Field>\n              <Input\n                placeholder='Username'\n                value={this.state.user.username}\n                name='username'\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                placeholder='Password'\n                value={this.state.user.password}\n                name='password'\n                onChange={this.handleInputChange}\n                type='password'\n              />\n            </Form.Field>\n            { this.state.error && <div style={{ color: \"#ae5856\" }}>{this.state.error}</div> }\n            <Form.Field>\n              <Button\n                fluid\n                basic\n                color='green'\n                onClick={this.handleSignInClick}\n              >\n                SignIn\n              </Button>\n            </Form.Field>\n            <Form.Field>\n              <Button\n                fluid\n                basic\n                color='red'\n                onClick={this.handleSignUpClick}\n              >\n                Or SignUp Here!\n              </Button>\n            </Form.Field>\n          </Form>\n        </Segment>\n      );\n    }\n    \n    return <Redirect to='/wallets' />;\n  }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\nimport { Button, Header, Icon, Modal, Form, Input, Dropdown, Message } from 'semantic-ui-react';\nimport isNumeric from 'validator/lib/isNumeric';\nimport PropTypes from 'prop-types';\nimport currencies from '../common/currencies';\nimport category from '../common/category';\nimport years from '../common/years';\nimport months from '../common/months';\nimport { convertNumber, convertToString } from '../utils/helper';\n\nclass AddBudgetForm extends Component {\n  state = { \n    modalOpen: false,\n    budget: {\n      category: '',\n      currency: '',\n      year: '',\n      month: '',\n      amount: ''\n    },\n    errors: {}\n  };\n\n  handleOpenClick = () => this.setState({\n    modalOpen: true,\n    budget: {\n      category: this.props.category || '',\n      currency: this.props.currency || '',\n      year: this.props.year || '',\n      month: this.props.month || '',\n      amount: ''\n    }\n  });\n\n  handleCloseClick = () => this.setState({ modalOpen: false });\n  \n  validate = (budget) => {\n    const errors = {};\n    if (!budget.category) {\n      errors.category = `Name can't be empty`;\n    }\n    if (!budget.currency) {\n      errors.currency = `Currency can't be empty`;\n    }\n    \n    if (!isNumeric(budget.amount)) {\n      errors.amount = `Amount must be a valid number`;\n    }\n    return errors;\n  }\n  \n  handleAddBudgetClick = () => {\n    const errors = this.validate(this.state.budget);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.props.onAddBudgetClick(this.state.budget);\n      this.setState({\n        modalOpen: false,\n        budget: {\n          category: '',\n          currency: '',\n          year: '',\n          month: '',\n          amount: ''\n        }\n      });\n    }\n  }\n  \n  handleInputChange = (event, data) => this.setState({\n    budget: { ...this.state.budget, [data.name]: data.name === 'amount' ? convertToString(data.value) : data.value }\n  });\n\n  render() {\n    const errors = this.state.errors;\n    const keys = Object.keys(errors);\n    const errorMessages = keys.map(key => (\n      <Message\n        key={key}\n        error\n        header={key}\n        content={errors[key]}\n      />\n    ));\n    return (\n      <Modal\n        trigger={<Button icon='plus' circular color='green' onClick={this.handleOpenClick} />}\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n        basic\n        size='small'\n      >\n        <Header icon='suitcase' content='Add Budget' />\n        <Modal.Content>\n          <Form error={errorMessages.length !== 0}>\n            {errorMessages}\n            <Form.Field>\n              <Dropdown\n                value={this.state.budget.category}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={category['Outcome']}\n                name='category'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                value={this.state.budget.currency}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={currencies}\n                name='currency'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                value={this.state.budget.year}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={years}\n                name='year'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                value={this.state.budget.month}\n                onChange={this.handleInputChange}\n                selection\n                fluid\n                options={months}\n                name='month'\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                value={this.state.budget.amount === '' ? this.state.budget.amount : convertNumber(this.state.budget.amount)}\n                onChange={this.handleInputChange}\n                placeholder='Amount'\n                fluid\n                name='amount'\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.handleAddBudgetClick} inverted>\n            <Icon name='plus' /> Add\n          </Button>\n          <Button color='red' onClick={this.handleCloseClick} inverted>\n            <Icon name='close' /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nAddBudgetForm.propTypes = {\n  onAddBudgetClick: PropTypes.func.isRequired\n};\n\nexport default AddBudgetForm;","import React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { Button, Grid } from 'semantic-ui-react';\nimport { getCurrentDate } from '../utils/helper';\n\nclass ForecastChart extends Component {\n  state = {\n    displayChart: false,\n    plotOptions: {\n      line: {\n        marker: {\n          enabled: false\n        }\n      }\n    },\n    title: {\n      text: this.props.category || ''\n    },\n    series: [{ name: 'Spent', data: [] },\n             { name: 'Budget', data: [] }]\n  }\n  \n  componentDidMount() {\n    const transactions = ForecastChart.computeSumUpTransactions(this.props.transactions);\n    const budget = Array.from({length: 31}, (v, k) => this.props.budget);\n    if (getCurrentDate().month === this.props.month) {\n      const predictions = ForecastChart.computePrediction(transactions);\n      this.setState({\n        series: [{ name: 'Spent', data: transactions, color: 'red' },\n                 { name: 'Budget', data: budget, color: 'blue' },\n                 { name: 'Predict', data: predictions, color: 'green', dashStyle: 'dash' }],\n      });\n    }\n    this.setState({\n      series: [{ name: 'Spent', data: transactions, color: 'red' },\n               { name: 'Budget', data: budget, color: 'blue' }],\n    });\n  }\n  \n  static getDerivedStateFromProps(props, state) {\n    const transactions = ForecastChart.computeSumUpTransactions(props.transactions);\n    const budget = Array.from({length: 31}, (v, k) => props.budget);\n    if (getCurrentDate().month === props.month) {\n      const predictions = ForecastChart.computePrediction(transactions);\n      return {\n        series: [{ name: 'Spent', data: transactions, color: 'red' },\n                 { name: 'Budget', data: budget, color: 'blue' },\n                 { name: 'Predict', data: predictions, color: 'green', dashStyle: 'dash' }],\n      };\n    }\n    return { series: [{ name: 'Spent', data: transactions, color: 'red' },\n                      { name: 'Budget', data: budget, color: 'blue' },\n                      { name: 'Predict', data: [], color: 'green', dashStyle: 'dash' }]\n    };\n  }\n  \n  static computePrediction = propTransactions => {\n    const estDailySpent = propTransactions[getCurrentDate().day] / getCurrentDate().day;\n    const predictions = [ ...propTransactions ];\n    let i;\n    for (i = getCurrentDate().day; i < predictions.length; i++) {\n      predictions[i] = (predictions[i - 1] + estDailySpent);\n    }\n    return predictions;\n  }\n  \n  static computeSumUpTransactions = propTransactions => {\n    const transactions = [];\n    let i;\n    for (i = 0; i < propTransactions.length; i++) {\n      transactions.push(propTransactions[i] + (transactions[i - 1] || 0));\n    }\n    return transactions;\n  }\n  \n  render() {\n    if (!this.state.displayChart) {\n      return (\n        <Grid textAlign='center' style={{ marginTop: 0 }} >\n          <Grid.Row>\n            <Button \n              onClick={() => {\n                this.setState({ displayChart: true \n                })}}\n              basic icon='chart line'\n              circular\n              color='blue' />\n          </Grid.Row>\n        </Grid>\n      );\n    }\n    return (\n      <div\n        style={{ marginTop: '10px' }}\n        onClick={() => this.setState({ displayChart: false })}\n      >\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={this.state}\n          update={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ForecastChart;","import React, { Component } from 'react';\nimport { Route, Link, Redirect } from 'react-router-dom';\nimport { Button, Segment, Header, Progress, Grid, Divider } from 'semantic-ui-react';\nimport { getTransactions, isSignedIn, getCurrentDate, convertNumber } from '../utils/helper';\nimport currencies from '../common/currencies';\nimport months from '../common/months';\nimport AddBudgetForm from '../forms/AddBudgetForm';\nimport ForecastChart from '../components/ForecastChart';\nimport { createBudget, deleteBudget } from '../utils/helper';\n\nclass ReportPage extends Component {\n  state = {\n    redirectSignIn: false,\n    displayCurrency: 'jp',\n    wallets: [],\n    budgets: []\n  }\n  \n  UNSAFE_componentWillMount() {\n    if (!localStorage.getItem('wodeqian-token')) {\n      this.setState({ redirectSignIn: true });\n    }\n  }\n  \n  componentDidMount() {\n    isSignedIn().then(res => {\n      if (res.error) {\n        localStorage.removeItem('wodeqian-token');\n        if (!this.state.redirectSignIn) {\n          this.setState({ redirectSignIn: true });\n        }\n        throw new Error('Token is not valid');\n      } else {\n        this.setState({ nickname: res.nickname });\n      }\n    }).then(() => this.setTransactions())\n      .catch(e => console.error(e));\n  }\n  \n  setTransactions = () => {\n    getTransactions(data => {\n      this.setState({ wallets: data.wallets, budgets: data.budgets });\n    });\n  }\n  \n  handleAddBudgetClick = (budget) => {\n    createBudget(budget)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ redirectSignIn: true });\n          throw new Error('Response Error');\n        }\n      })\n      .then(() => this.setTransactions())\n      .then(() => this.forceUpdate())\n      .catch((e) => console.error(e));\n  }\n  \n  handleTrashClick = (budgetId) => {\n    deleteBudget({id: budgetId})\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          this.setState({ redirectSignIn: true });\n          throw new Error('Response Error');\n        }\n      })\n      .then(() => this.setTransactions())\n      .then(() => this.forceUpdate());\n  }\n  \n  setDisplayCurrency = (displayCurrency) => {\n    this.setState({ displayCurrency });\n  }\n  \n  render() {\n    if (this.state.redirectSignIn) {\n      return (\n        <Redirect\n          to='/signin'\n        />\n      );\n    }\n    \n    const currentDate = getCurrentDate();\n    \n    return (\n      <div>\n        <Route\n          path='/reports/:wallet/:year/:month'\n          render={({ match }) => {\n            let oldYear = Number(match.params.year),\n                newYear = Number(match.params.year),\n                newMonth = Number(match.params.month) + 1,\n                oldMonth = Number(match.params.month) - 1;\n            if (oldMonth === 0) {\n              oldMonth = 12;\n              oldYear = oldYear - 1;\n            } else if (newMonth === 13) {\n              newMonth = 1;\n              newYear = newYear + 1;\n            }\n            let totalSpent = 0;\n            let totalIncome = 0;\n            const categoricalSpent = {};\n            const categoricalSpentDailySpent = {};\n            const categoricalIncome = {};\n            const budgets = {};\n            this.state.budgets.filter(b => (\n              b.year === Number(match.params.year)  && \n              b.month === Number(match.params.month) && \n              b.currency === this.state.displayCurrency\n            )).forEach(budget => budgets[budget.category] = { id: budget._id, amount: budget.amount });\n            \n            this.state.wallets.forEach(wallet => {\n              if (wallet.currency !== this.state.displayCurrency) return;\n              \n              const thisWalletTransactions = wallet.transactions.filter(t => (\n                t.year === Number(match.params.year)  && t.month === Number(match.params.month)\n              )).sort((a, b) => (b.day - a.day));\n              thisWalletTransactions.forEach(t => {\n                if (t.type === 'Outcome') {\n                  if (t.category === 'Transfer To' || t.category === 'Investment') {\n                    return;\n                  }\n                  totalSpent += t.cost;\n                  if (typeof categoricalSpent[t.category] === 'undefined') {\n                    categoricalSpentDailySpent[t.category] = Array.from({length: 31}, (v, k) => 0);\n                    categoricalSpentDailySpent[t.category][t.day - 1] += t.cost;\n                    categoricalSpent[t.category] = [t.cost];\n                  } else {\n                    categoricalSpentDailySpent[t.category][t.day - 1] += t.cost;\n                    categoricalSpent[t.category].push(t.cost);\n                  }\n                } else {\n                  if (t.category === 'Transfer From') return;\n                  totalIncome += t.cost;\n                  if (typeof categoricalIncome[t.category] === 'undefined') {\n                    categoricalIncome[t.category] = [t.cost];\n                  } else {\n                    categoricalIncome[t.category].push(t.cost);\n                  }\n                }\n              });\n            });\n            const balance = totalIncome - totalSpent;\n            const currencyCode = currencies.filter(c => c.value === this.state.displayCurrency)[0].code;\n            const monthString = months.filter(m => m.value === Number(match.params.month))[0].code;\n            const outcomeCategory = ['Convenient Store', 'Supermarket', 'Eating Out', 'Shopping', 'Transportation'];\n            const displayOutcome = outcomeCategory.map(category => {\n              let sumOfCategory = 0;\n              if (categoricalSpent[category]) {\n                sumOfCategory = categoricalSpent[category].reduce((a, b) => a + b, 0);\n              }\n              return (\n              <div key={category}>\n                <Divider />\n                <Grid textAlign='center'>\n                  <Grid.Row style={{ paddingBottom: 0 }}>\n                    <Grid.Column>\n                      <Header size='small'>\n                        {category}\n                      </Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row style={{ paddingTop: '5px' }}>\n                    <Grid.Column>\n                      <Header size='small'>\n                        {currencyCode} {convertNumber(sumOfCategory)}\n                      </Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                  { !budgets[category] && (\n                    <Grid.Row style={{ padding: 0 }}>\n                      <AddBudgetForm\n                        onAddBudgetClick={this.handleAddBudgetClick}\n                        category={category}\n                        currency={this.state.displayCurrency}\n                        month={Number(match.params.month)}\n                        year={Number(match.params.year)}\n                      />\n                    </Grid.Row>\n                  )}\n                  { budgets[category] && (\n                    <Grid.Row style={{ paddingTop: 0 }}>\n                      <Button circular onClick={() => this.handleTrashClick(budgets[category].id)} size='small' icon='trash' basic color='red' />\n                      <Button circular size='small' icon='pencil' basic color='green' />\n                    </Grid.Row>\n                  )}\n                </Grid>\n                \n                { sumOfCategory > 0 && budgets[category] && (\n                  <ForecastChart\n                    transactions={categoricalSpentDailySpent[category]}\n                    category={category}\n                    budget={budgets[category].amount}\n                    month={Number(match.params.month)}\n                  />\n                )}\n                { budgets[category] && (\n                  <Progress \n                    style={{ marginTop: '14px', marginBottom: '40px' }}\n                    progress\n                    color={Math.floor(sumOfCategory * 100 / budgets[category].amount) >= 100 ? 'red' : 'green'}\n                    percent={Math.floor(sumOfCategory * 100 / budgets[category].amount)}\n                    label={`${convertNumber(budgets[category].amount - sumOfCategory)} / ${convertNumber(budgets[category].amount)}`} />\n                )}\n                \n                { !budgets[category] && <div style={{marginBottom: '30px'}} /> }\n              </div>\n              )}\n            );\n            return (\n              <Segment raised>\n                <Header size='huge' textAlign='center' color='blue'>\n                  {`${monthString}, ${match.params.year}`}\n                </Header>\n                <Grid textAlign='center' >\n                  <Grid.Row columns={3}>\n                    <Grid.Column>\n                      <Link\n                        to={match.params.wallet !== 'noWallet' ?\n                          `/reports/${match.params.wallet}/${oldYear}/${oldMonth}` :\n                          `/reports/noWallet/${oldYear}/${oldMonth}`\n                        }\n                      >\n                        <Button\n                          basic\n                          color='green'\n                        >\n                          Previous\n                        </Button>\n                      </Link>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Link\n                        to={match.params.wallet !== 'noWallet' ?\n                          `/wallets/${match.params.wallet}/${match.params.year}/${match.params.month}` :\n                          '/wallets'\n                        }\n                      >\n                        <Button\n                          circular\n                          color='green'\n                        >\n                          Transactions\n                        </Button>\n                      </Link>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Link\n                        to={match.params.wallet !== '#' ?\n                          `/reports/${match.params.wallet}/${newYear}/${newMonth}` :\n                          `/reports/noWallet/${newYear}/${newMonth}`\n                        }\n                      >\n                        <Button\n                          basic\n                          color='green'\n                        >\n                          Next\n                        </Button>\n                      </Link>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row columns={3}>\n                    <Grid.Column>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Button basic circular icon\n                        onClick={() => this.setDisplayCurrency('jp')}\n                      >\n                        <i style={{ margin: 0 }} className='jp flag' />\n                      </Button>\n                      <Button basic circular icon\n                        onClick={() => this.setDisplayCurrency('tw')}\n                      >\n                        <i style={{ margin: 0 }} className='tw flag' />\n                      </Button>\n                      <Button basic circular icon\n                        onClick={() => this.setDisplayCurrency('us')}\n                      >\n                        <i style={{ margin: 0 }} className='us flag' />\n                      </Button>\n                      <Button basic circular icon\n                        onClick={() => this.setDisplayCurrency('vn')}\n                      >\n                        <i style={{ margin: 0 }} className='vn flag' />\n                      </Button>\n                    </Grid.Column>\n                    <Grid.Column>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row columns={2}>\n                    <Grid.Column>\n                      <Header textAlign='right'>\n                        Total Income\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Header textAlign='left' color='blue'>\n                        {currencyCode} {convertNumber(totalIncome)}\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Header textAlign='right'>\n                        Total Spent\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Header textAlign='left' color='red'>\n                        {currencyCode} {convertNumber(totalSpent)}\n                      </Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row columns={2}>\n                    <Grid.Column>\n                      <Header textAlign='right'>\n                        Balance\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Header textAlign='left' color={balance < 0 ? 'red' : 'green'}>\n                        {currencyCode} {convertNumber(balance)}\n                      </Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                {displayOutcome}\n              </Segment>\n            );\n          }}\n        />\n        <Route exact\n          path='/reports'\n          render={() => (\n            <Redirect\n              to={`/reports/noWallet/${currentDate.year}/${currentDate.month}`}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ReportPage;","import React from 'react';\nimport { Route, Redirect, Link } from 'react-router-dom';\nimport { Header, Icon } from 'semantic-ui-react';\nimport WalletPage from './pages/WalletPage';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport ReportPage from './pages/ReportPage';\n\nconst App = () => (\n  <div className='ui container'>\n    <Link to='/'>\n      <Header size='huge' textAlign='center' style={{marginTop: '30px'}}>\n        <Icon name='money' />MoneyFlow\n      </Header>\n    </Link>\n    <Route path='/signin' component={ SignIn } />\n    <Route path='/signup' component={ SignUp } />\n    <Route path='/wallets' component={ WalletPage } />\n    <Route path='/reports' component={ ReportPage } />\n    <Route exact path='/' render={() => (\n      <Redirect\n        to='/wallets'\n      />\n    )}\n    />\n  </div>\n);\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}